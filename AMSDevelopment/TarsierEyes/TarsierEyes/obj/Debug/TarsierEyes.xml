<?xml version="1.0"?>
<doc>
<assembly>
<name>
TarsierEyes
</name>
</assembly>
<members>
<member name="T:TarsierEyes.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.ClearText">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.Grip3">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.MySQL">
<summary>
  Looks up a localized resource of type System.Byte[].
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.MySQLDump">
<summary>
  Looks up a localized resource of type System.Byte[].
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.SevenZ">
<summary>
  Looks up a localized resource of type System.Byte[].
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.SevenZDll">
<summary>
  Looks up a localized resource of type System.Byte[].
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.SevenZG">
<summary>
  Looks up a localized resource of type System.Byte[].
</summary>
</member>
<member name="P:TarsierEyes.My.Resources.Resources.WinRAR">
<summary>
  Looks up a localized resource of type System.Byte[].
</summary>
</member>
<member name="T:TarsierEyes.Common.Amounts">
 <summary>
 Class for converting numbers / amounts to its corresponding english word representations.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Common.Amounts.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.#ctor(System.Decimal)">
 <summary>
 Creates a new instance of TarsierEyes.Common.Amounts.
 </summary>
 <param name="amount">Amount to convert</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.#ctor(System.Decimal,System.String)">
 <summary>
 Creates a new instance of TarsierEyes.Common.Amounts.
 </summary>
 <param name="amount">Amount to convert</param>
 <param name="currency">Suffixing currency</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Common.Amounts.Amount">
 <summary>
 Gets or sets amount to be converted.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Common.Amounts.Currency">
 <summary>
 Gets or sets suffixing currency for the word representation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.ToString">
 <summary>
 Gets the english word representation of the specified amount.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.AmountToWords(System.Double)">
 <summary>
 Calls the Amounts class' ToString overriden function to convert numeric value to its english word representation.
 </summary>
 <param name="amount">Amount to represent.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.AmountToWords(System.Double,System.String)">
 <summary>
 Calls the Amounts class' ToString overriden function to convert numeric value to its english word representation.
 </summary>
 <param name="amount">Amount to represent.</param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Amounts.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Simple">
 <summary>
 Common and simple shared functions and methods.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Simple.Dialogs">
 <summary>
 Simplified class for creating file dialogs
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Simple.Dialogs.FilterEnum">
 <summary>
 Commonly used file extensions.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.BMP">
 <summary>
 Bitmap images.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.DOC">
 <summary>
 Microsoft Word Document.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.DOCX">
 <summary>
 Microsoft Word Document - Open XML.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.GIF">
 <summary>
 Graphics Interchange Format.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.ICO">
 <summary>
 Icon Images.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.JPG">
 <summary>
 Joint Photographic Experts Group Images.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.PDF">
 <summary>
 Portable Document Format.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.PNG">
 <summary>
 Portable Network Graphics.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.TXT">
 <summary>
 Text Files.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.XLS">
 <summary>
 Microsoft Excel Worrksheet.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.XLSX">
 <summary>
 Microsoft Excel Worksheet - Open XML.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Common.Simple.Dialogs.FilterEnum.XML">
 <summary>
 Extensive Markup Language Files.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.DialogFilter(TarsierEyes.Common.Simple.Dialogs.FilterEnum)">
 <summary>
 Provides standard dialog filter string format for the file type specified.
 </summary>
 <param name="filter">File type.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.SaveDialog(System.String,System.String)">
 <summary>
 Creates an instance of a SaveFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.SaveDialog(System.String,TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection)">
 <summary>
 Creates an instance of a SaveFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.SaveDialog(System.String,System.String,System.String)">
 <summary>
 Creates an instance of a SaveFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <param name="defaultextension">Default file extension.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.SaveDialog(System.String,TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection,System.String)">
 <summary>
 Creates an instance of a SaveFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <param name="defaultextension">Default file extension.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.BrowseDialog(System.String,System.String)">
 <summary>
 Creates an instance of OpenFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.BrowseDialog(System.String,TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection)">
 <summary>
 Creates an instance of OpenFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.BrowseDialog(System.String,System.String,System.String)">
 <summary>
 Creates an instance of OpenFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <param name="defaultextension">Default file extension.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.BrowseDialog(System.String,TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection,System.String)">
 <summary>
 Creates an instance of OpenFileDialog.
 </summary>
 <param name="title">Dialog title text.</param>
 <param name="filter">Dialog filters.</param>
 <param name="defaultextension">Default file extension.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection">
 <summary>
 Collection of common dialog filter strings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection.Items(System.Int32)">
 <summary>
 Gets an item within this instance of DialogFilterCollection
 </summary>
 <param name="index"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection.Add(System.String)">
 <summary>
 Adds an item in this instance of DialogFilterCollection
 </summary>
 <param name="value">Valid common dialog filter string.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection.Contains(System.String)">
 <summary>
 Validates if item is existing in this instance of DialogFilterCollection
 </summary>
 <param name="value">Value to find</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection.Remove(System.String)">
 <summary>
 Removes an item in this instance of DialogFilterCollection
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Dialogs.DialogFilterCollection.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ByteArrayToHexaDecimalString(System.Byte[])">
 <summary>
 Converts the given byte array to its hexadecimal string representation.
 </summary>
 <param name="bytes">Array of byte to be interpreted.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ByteArrayToFileObject(System.Byte[],System.String)">
 <summary>
 Converts the given byte array to its corresponding file with the specified file extension.
 </summary>
 <param name="bytes">Array of byte to be interpreted.</param>
 <param name="fileextension">Output file extension.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ByteArrayToFileObject(System.Byte[],System.String,System.String)">
 <summary>
 Converts the given byte array to its corresponding file with the specified file extension.
 </summary>
 <param name="bytes">Array of byte to be interpreted.</param>
 <param name="fileextension">Output file extension.</param>
 <param name=" outputdirectory">The output directory for the specified file.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ByteArrayToImage(System.Byte[])">
 <summary>
 Converts the given blob byte array to its image representation.
 </summary>
 <param name="bytes">Array of byte to be interpreted.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.DataSourceValue(System.Data.DataTable,System.String,System.String)">
 <summary>
 Gets a field value from the data source using the supplied text filter expression.
 </summary>
 <param name="datasource">Data source to evaluate.</param>
 <param name="filterexpression">Data table row filter expression.</param>
 <param name="field">Field's name to fetch the value from.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.DataSourceValue(System.Data.DataTable,System.String,System.String,System.Object)">
 <summary>
 Gets a field value from the data source using the supplied text filter expression.
 </summary>
 <param name="datasource">Data source to evaluate.</param>
 <param name="filterexpression">Data table row filter expression.</param>
 <param name="field">Field's name to fetch the value from.</param>
 <param name="defaultvalue">Default value if there is nothing to return.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.DataSourceValue``1(System.Data.DataTable,System.String,System.String,``0)">
 <summary>
 Gets a field value from the data source using the supplied text filter expression.
 </summary>
 <typeparam name="TResult"></typeparam>
 <param name="datasource">Data source to evaluate.</param>
 <param name="filterexpression">Data table row filter expression.</param>
 <param name="field">Field's name to fetch the value from.</param>
 <param name="defaultvalue">Default value if there is nothing to return.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.DotPasswordChar">
 <summary>
 Gets the commonly used "." password character.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.FileObjectToByteArray(System.String)">
 <summary>
 Converts the file (in the given path) to its byte array representation.
 </summary>
 <param name="filename">File's full path.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.FileObjectToHexaDecimalString(System.String)">
 <summary>
 Converts the file (in the given path) to its hexadecimal string representation.
 </summary>
 <param name="filename">File's full path.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.GetCountryTable">
 <summary>
 Gets the list of countries and loads it in a System.Data.DataTable.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ImageToByteArray(System.Drawing.Image)">
 <summary>
 Converts the specified image to its bytes array representation.
 </summary>
 <param name="image">Image object to be interpreted.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ImageToHexaDecimalString(System.Drawing.Image)">
 <summary>
 Converts the given image to its hexadecimal string representation.
 </summary>
 <param name="image">Image object to be interpreted.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.IsNullOrNothing(System.Object)">
 <summary>
 Validates if the specified value is Null.Value or Nothing.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ToProperString(System.String)">
 <summary>
 Gets the proper case (first letter : upper case and preceeding in lower case) string value of the specified string.
 </summary>
 <param name="value">String value to convert into.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ToSafeValue``1(``0)">
 <summary>
 Parses the specified value to return its corresponding type-safe representation.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="value">Value to evaluate.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ToSafeValue``1(``0,``0)">
 <summary>
 Parses the specified value to return its corresponding type-safe representation.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="value">Value to evaluate.</param>
 <param name="defaultvalue">Default value to return just in case it is unsafe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.TryChangeType``1(System.Object)">
 <summary>
 Works like TryCast function but this time supports assigned value types (ea. Integer, Decimal, Date and etc.).
 </summary>
 <typeparam name="T"></typeparam>
 <param name="expression">Expression to convert.</param>
 <returns>Returns Nothing if convertion fails.</returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Valid(System.Object,System.Windows.Forms.Control,System.Boolean,System.String)">
 <summary>
 Validates whether condition was satisfied otherwise control specified will be highligthed (validator should be a DevComponents.DotNetBar.Validator.SuperValidator).
 </summary>
 <param name="validator">DevComponents.DotNetBar.Validator.SuperValidator to use as the control notifying object.</param>
 <param name="control">Control to place a notifier with.</param>
 <param name="condition">The true part of the satisfying condition to evaluate.</param>
 <param name="notification">Notification message to be shown.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.ClearContents(System.Object)">
 <summary>
 Clears each of the controls in the specified form or control (or specified control itself) text, items, and data sources.
 </summary>
 <param name="control">Control, form or container to be iterated.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.DataSourceRowFilter(System.Data.DataTable,System.String)">
 <summary>
 Applies row filter to the given data source (to all posible datasource columns) with the specified filtering values.
 </summary>
 <param name="datasource">Datasource to apply the filter with.</param>
 <param name="valuefilter">Value to search from the datasource.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.DataSourceRowFilter(System.Data.DataTable,System.String,System.String[])">
 <summary>
 Applies row filter to the given data source (to all posible datasource columns) with the specified filtering values.
 </summary>
 <param name="datasource">Datasource to apply the filter with.</param>
 <param name="valuefilter">Value to search from the datasource.</param>
 <param name="excludedfields">Field names to be excluded from the search criteria.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.EnableFields(System.Object)">
 <summary>
 Enables all input controls and button within the specified form, control or container.
 </summary>
 <param name="control">Control, form or container to be iterated</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.EnableFields(System.Object,System.Boolean)">
 <summary>
 Enables all input controls and button within the specified form, control or container.
 </summary>
 <param name="control">Control, form or container to be iterated.</param>
 <param name="enabled">Determines whether the controls will be disable or not.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.MarkFormAsEdited(System.Windows.Forms.Form)">
 <summary>
 Places an "*" character in the form's caption as indicator that a form has been modified.
 </summary>
 <param name="form">Form to place a marking.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Redraw(System.Object)">
 <summary>
 Redraw an object; basically use for C1.Win.C1FlexGrid.C1FlexGrid, DevComponents.AdvTree.AdvTree and DevComponents.DotNetBar.Controls.ListViewEx using its EndUpdate method.
 </summary>
 <param name="control"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.Redraw(System.Object,System.Boolean)">
 <summary>
 Redraw an object; basically use for C1.Win.C1FlexGrid.C1FlexGrid, DevComponents.AdvTree.AdvTree and DevComponents.DotNetBar.Controls.ListViewEx using its BeginUpdate and EndUpdate method.
 </summary>
 <param name="control"></param>
 <param name="redraw"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Simple.RefreshAndManageCurrentProcess">
 <summary>
 Refreshes and force the release of the entire unmanaged resources of the current application's process. Resources (API calls and attached method) c / o : DMA.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.MSExcel">
 <summary>
 Class for internal MS Excel customizations.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.ExcelAutoColumnFilters(System.String,System.String)">
 <summary>
 Adds column filters for each available columns in the specified excel worksheet.
 </summary>
 <param name="filename"></param>
 <param name="sheetname"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.ExcelAutoColumnFilters(System.String)">
 <summary>
  Adds column filters for each available columns in the first excel worksheet of the specified excel file.
 </summary>
 <param name="filename"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.ExcelWorkSheets(System.String)">
 <summary>
 Retreives list of excel worksheet names inside the specified excel file.
 </summary>
 <param name="filename"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.ExcelSheetColumn(System.Int32)">
 <summary>
 Gets excel sheet column name for the given column index.
 </summary>
 <param name="index">Column index.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.Export(System.Data.DataTable,System.String@)">
 <summary>
 Exports the specified DataTable's row data into the specified Microsoft Excel file (file must be in .csv format; method will automatcially alter the extension when it detects that it is not in .csv).
 </summary>
 <param name="table"></param>
 <param name="filename"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.Export(System.Data.DataTable,System.String@,System.String)">
 <summary>
 Exports the specified DataTable's row data into the specified Microsoft Excel file (file must be in .csv format; method will automatcially alter the extension when it detects that it is not in .csv).
 </summary>
 <param name="table"></param>
 <param name="filename"></param>
 <param name="separator"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.WriteTextToExcel(System.String,System.String,System.String)">
 <summary>
 Write specified text into the bottom row of the specified excel worksheet.
 </summary>
 <param name="filename">Excel filename.</param>
 <param name="sheetname">Excel worksheet name.</param>
 <param name="text">Text to be written.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.WriteTextToExcel(System.String,System.String,System.String,System.Drawing.Point)">
 <summary>
 Write specified text into the supplied excel coordinates (cell) of the specified excel worksheet.
 </summary>
 <param name="filename">Excel filename.</param>
 <param name="sheetname">Excel worksheet name.</param>
 <param name="text">Text to be written.</param>
 <param name="coordinate">Excel coordinates (cell) to where the text will be written.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.WriteTextToExcel(System.String,System.String)">
 <summary>
 Write specified text into the bottom row of the first excel worksheet in the specified excel file.
 </summary>
 <param name="filename">Excel filename.</param>
 <param name="text">Text to be written.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.WriteTextToExcel(System.String,System.String,System.Drawing.Point)">
 <summary>
 Write specified text into the supplied excel coordinates (cell) of the first excel worksheet in the specified excel file.
 </summary>
 <param name="filename">Excel filename.</param>
 <param name="text">Text to be written.</param>
 <param name="coordinate">Excel coordinates (cell) to where the text will be written.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.Import(System.String)">
 <summary>
 Imports the first worksheet of the given excel file into a System.DataTable.
 </summary>
 <param name="filename">File path to be imported.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.MSExcel.Import(System.String,System.String)">
 <summary>
 Imports the selected worksheet of the given excel file into a System.DataTable.
 </summary>
 <param name="filename">File path to be imported.</param>
 <param name="sheetname">Excel work sheet within the file to be imported.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Synchronization">
 <summary>
 Class for method and function synchronization.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.WaitToFinish(System.Threading.Thread)">
 <summary>
 Waits for the System.Threading.Thread's process to be completed.
 </summary>
 <param name="thread">Thread to wait for.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.WaitToFinish(System.Object[])">
 <summary>
 Waits all of specified asynhronizations to be completed.
 </summary>
 <param name="syncs"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.WaitToFinish(System.Threading.Thread,System.Object)">
 <summary>
 Waits for the System.Threading.Thread's process to be completed.
 </summary>
 <param name="thread">Thread to wait for.</param>
 <param name="progressbar">Progress bar object to show the current running time of the thread.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.WaitToFinish(System.IAsyncResult)">
 <summary>
 Waits for the IAsyncResult Interface's process to be completed.
 </summary>
 <param name="asyncresult">IAsyncResult interface to wait for.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.WaitToFinish(System.IAsyncResult,System.Object)">
 <summary>
 Waits for the IAsyncResult Interface's process to be completed.
 </summary>
 <param name="asyncresult">IAsyncResult interface wait for.</param>
 <param name="progressbar">Progress bar object to show the current running time of the delegate.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.EndProgress(System.Object)">
 <summary>
 Maximize a progress bar's value synchronously and hides it afterwards.
 </summary>
 <param name="progressbar"></param>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Synchronization.Func`6">
 <summary>
 Encapsulates a method that has 5 parameters and returns a value of the type specified by the TResult parameter.
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <typeparam name="T4"></typeparam>
 <typeparam name="T5"></typeparam>
 <typeparam name="TResult"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <param name="arg4"></param>
 <param name="arg5"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Synchronization.Func`7">
 <summary>
 Encapsulates a method that has 6 parameters and returns a value of the type specified by the TResult parameter.
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <typeparam name="T4"></typeparam>
 <typeparam name="T5"></typeparam>
 <typeparam name="T6"></typeparam>
 <typeparam name="TResult"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <param name="arg4"></param>
 <param name="arg5"></param>
 <param name="arg6"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Synchronization.Action`5">
 <summary>
 Encapsulates a method that has 5 parameters and does note return any value.
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <typeparam name="T4"></typeparam>
 <typeparam name="T5"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <param name="arg4"></param>
 <param name="arg5"></param>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.Synchronization.Action`6">
 <summary>
 Encapsulates a method that has 6 parameters and does note return any value.
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <typeparam name="T4"></typeparam>
 <typeparam name="T5"></typeparam>
 <typeparam name="T6"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <param name="arg4"></param>
 <param name="arg5"></param>
 <param name="arg6"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.Tuple``2(``0,``1)">
 <summary>
 Enacapsulates an array of object with two data types.
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.Tuple``3(``0,``1,``2)">
 <summary>
 Enacapsulates an array of object with three data types. 
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.Tuple``4(``0,``1,``2,``3)">
 <summary>
 Enacapsulates an array of object with four data types. 
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <typeparam name="T4"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <param name="arg4"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.Tuple``5(``0,``1,``2,``3,``4)">
 <summary>
 Enacapsulates an array of object with five data types. 
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <typeparam name="T4"></typeparam>
 <typeparam name="T5"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <param name="arg4"></param>
 <param name="arg5"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.Synchronization.Tuple``6(``0,``1,``2,``3,``4,``5)">
 <summary>
 Enacapsulates an array of object with six data types. 
 </summary>
 <typeparam name="T1"></typeparam>
 <typeparam name="T2"></typeparam>
 <typeparam name="T3"></typeparam>
 <typeparam name="T4"></typeparam>
 <typeparam name="T5"></typeparam>
 <typeparam name="T6"></typeparam>
 <param name="arg1"></param>
 <param name="arg2"></param>
 <param name="arg3"></param>
 <param name="arg4"></param>
 <param name="arg5"></param>
 <param name="arg6"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Common.SQLStrings">
 <summary>
 Common strings to SQL-qualified strings.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.SQLStrings.ToSqlValidString(System.Double)">
 <summary>
 Converts numeric value at floating point to its SQL qualified string representation.
 </summary>
 <param name="NumericValue">Numeric value ro convert.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.SQLStrings.ToSqlValidString(System.Double,System.Int32)">
 <summary>
 Converts numeric value at floating point to its SQL qualified string representation.
 </summary>
 <param name="NumericValue">Numeric value ro convert.</param>
 <param name="DecimalPlaces">Number of decimal places.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.SQLStrings.ToSqlValidString(System.String)">
 <summary>
 Converts string value to its SQL qualified string representation.
 </summary>
 <param name="StringValue">String value to convert.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.SQLStrings.ToSqlValidString(System.DateTime)">
 <summary>
 Converts date value to its SQL qualified date-string representation.
 </summary>
 <param name="DateValue">Date value to convert.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.SQLStrings.ToSqlValidString(System.String,System.Boolean)">
 <summary>
 Converts string value to its SQL qualified string representation.
 </summary>
 <param name="StringValue">String value to convert.</param>
 <param name="IsRowFilter">Determines if output will be used as a DataTable RowFilter qualified string.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Common.SQLStrings.ToSqlValidString(System.DateTime,System.Boolean)">
 <summary>
 Converts date value to its SQL qualified date-string representation.
 </summary>
 <param name="DateValue">Date value to convert.</param>
 <param name="WithHours">Determnies if output string shall represent the time together with the date.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Archiver">
 <summary>
 Class for file compression and / or archive file extraction.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Archiver.ArchivingToolEnum">
 <summary>
 Supported archiving tools.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Archiver.ArchivingToolEnum.SevenZip">
 <summary>
 7Zip archiving application.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Archiver.ArchivingToolEnum.WinRar">
 <summary>
 WinRar archiving application.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Archiver.ArchivingMethodEnum">
 <summary>
 Archiving methods.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Archiver.ArchivingMethodEnum.Insert">
 <summary>
 Insert : puts the whole specified file / directory in the archive file.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Archiver.ArchivingMethodEnum.Append">
 <summary>
 Append : puts a copy of specified file / directory inside the archive file.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Archiver.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.#ctor(System.String)">
 <summary>
  Creates a new instance of TarsierEyes.Archiver.
 </summary>
 <param name="path">Path of the file or directory to compress.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.#ctor(System.String,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
  Creates a new instance of TarsierEyes.Archiver.
 </summary>
 <param name="path">Path of the file or directory to compress.</param>
 <param name="archiver">Compression tool use.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.#ctor(System.String,TarsierEyes.Archiver.ArchivingToolEnum,System.Diagnostics.ProcessWindowStyle)">
 <summary>
  Creates a new instance of TarsierEyes.Archiver.
 </summary>
 <param name="path">Path of the file or directory to compress.</param>
 <param name="archiver">Archiving tool use.</param>
 <param name="winstyle">Command prompt window visibility upon compression.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.#ctor(System.String,TarsierEyes.Archiver.ArchivingToolEnum,System.Diagnostics.ProcessWindowStyle,TarsierEyes.Archiver.ArchivingMethodEnum)">
 <summary>
  Creates a new instance of TarsierEyes.Archiver.
 </summary>
 <param name="path">Path of the file or directory to compress.</param>
 <param name="archiver">Archiving tool use.</param>
 <param name="winstyle">Command prompt window visibility upon compression.</param>
 <param name="method">Archiving method to use.</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Archiver.ArchivedFile">
 <summary>
 Gets archive's path after successful compression.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Archiver.Archivers(TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Gets whether specified compression tool is available or not.
 </summary>
 <param name="archiver"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Archiver.ArchivingMethod">
 <summary>
 Gets or sets archiving method.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Archiver.ArchivingTool">
 <summary>
 Gets or sets compression tool to use.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Archiver.Path">
 <summary>
 Gets or sets file's / directory's path to compress.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Archiver.ProcessWindowStyle">
 <summary>
 Gets or sets command prompt's window status upon compression.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.Archive">
 <summary>
 Perform file / directory compression.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.Extract(System.String)">
 <summary>
 Performs archive extraction using the chosen archiving tool.
 </summary>
 <param name="destinationpath">Destination path for the extracted file(s).</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.CanUse(TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Validates if archiving tools are existing and can be use to operate.
 </summary>
 <param name="archiver">Archiving tool to check.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.CompressAdd(System.String,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file compression using selected archiving tool, file(s) will just be copied into the archive file.
 </summary>
 <param name="path">File / directory path to archive.</param>
 <param name="archiver">Archiving tool to use.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.CompressInsert(System.String,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file compression using selected archiving tool, file(s) will be inserted directly to the archive file.
 </summary>
 <param name="path">File / directory path to archive.</param>
 <param name="archiver">Archiving tool to use.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.Decompress(System.String,System.String,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file extraction from a compressed file into the specified destination folder using the selected archiving tool.
 </summary>
 <param name="filename">Compressed file's filename.</param>
 <param name="destination">Destination path for the extracted file(s).</param>
 <param name="archiver">Archiving tool to use.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Archiver.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Cryptography">
 <summary>
 Class for text encryption and decryption.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Cryptography.MD5Hash">
 <summary>
 Hash byte generator using MD5.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.MD5Hash.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Cryptography.MD5Hash.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.MD5Hash.#ctor(System.String)">
 <summary>
 Creates a new instance of TarsierEyes.Cryptography.MD5Hash.
 </summary>
 <param name="value">Text to be evaluated for the hash creation</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Cryptography.MD5Hash.Hash">
 <summary>
 Gets the hash byte value generated for the given key value.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.MD5Hash.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.MD5Hash.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Cryptography.Decryption">
 <summary>
 Class for decrypting text encrypted by TarsierEyes.Cryptography.Encrypt class (using MD5 and TripleDES).
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Cryptography.Decryption.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.#ctor(System.String,System.String)">
 <summary>
 Creates a new instance of TarsierEyes.Cryptography.Decryption.
 </summary>
 <param name="text">Text to be decrypted</param>
 <param name="key">Encryption key</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Cryptography.Decryption.Key">
 <summary>
 Gets or sets encryption key to be use as the decryption pattern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Cryptography.Decryption.Text">
 <summary>
 Gets or sets text to be decrypted.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.ToString">
 <summary>
 Gets the decrypted plain text of the specified encrypted text.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.Decrypt(System.String,System.String)">
 <summary>
 Calls Decryption class' ToString overriden function to decipher an encrypted text using the supplied decryption key.
 </summary>
 <param name="text">Text to decrypt.</param>
 <param name="key">Encryption key.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.Decrypt(System.IO.FileInfo,System.String)">
 <summary>
 Decrypts the specified file's contents using the supplied decryption key string pattern.
 </summary>
 <param name="file"></param>
 <param name="key"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.SimpleDecrypt(System.String,System.String)">
 <summary>
 Decrypts the given simply encrypted text based on its decryption key's character count.
 </summary>
 <param name="text">Text to decrypt.</param>
 <param name="key">Encryption key.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Decryption.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Cryptography.Encryption">
 <summary>
 Class to encrypt plain text using MD5 and TripleDES Crypto Service Providers.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Cryptography.Encryption.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.#ctor(System.String,System.String)">
 <summary>
 Creates a new instance of TarsierEyes.Cryptography.Encryption.
 </summary>
 <param name="text">Text to be encrypted.</param>
 <param name="key">Encryption key.</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Cryptography.Encryption.Key">
 <summary>
 Gets or sets encryption key to be use as the encryption pattern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Cryptography.Encryption.Text">
 <summary>
 Gets or sets text to be encrypted.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.ToString">
 <summary>
 Gets the encrypted text of the specified plain readable text.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.Encrypt(System.String,System.String)">
 <summary>
 Calls Encryption class' ToString overriden function to encrypt a plain text using the given encryption key as its pattern.
 </summary>
 <param name="text">Plain text to encrypt.</param>
 <param name="key">Encryption key.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.Encrypt(System.IO.FileInfo,System.String)">
 <summary>
 Encrypts the contents of the specified file using the specified encryption key pattern string.
 </summary>
 <param name="file"></param>
 <param name="key"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.SimpleEncrypt(System.String,System.String)">
 <summary>
 Encrypts the given string in a simple manner using the encryption key's number of character as its basis.
 </summary>
 <param name="text">Plain text to encrypt.</param>
 <param name="key">Encryption key.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Cryptography.Encryption.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL">
 <summary>
 Class for MySQL functionalities.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Dump">
 <summary>
 Class for MySQL backup and restoration using MySQL and MySQLDump applications.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Dump.TaskEnum">
 <summary>
 MySQL dumping tasks.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.TaskEnum.Export">
 <summary>
 Backup to a dump file.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.TaskEnum.Import">
 <summary>
 Restore a batch file.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum">
 <summary>
 Common unparameterized MySQL application command prompt parameters.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.AutoRehash">
 <summary>
 --auto-rehash
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Batch">
 <summary>
 --batch
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.ColumnNames">
 <summary>
 --column-names
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Comments">
 <summary>
 --comments
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Compress">
 <summary>
 --compress
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.DebugInfo">
 <summary>
 --debug-info
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Force">
 <summary>
 --force
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Help">
 <summary>
 --help
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Html">
 <summary>
 --html
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.IgnoreSpaces">
 <summary>
 --ignore-spaces
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.LineNumbers">
 <summary>
 --line-numbers
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.NamedCommands">
 <summary>
 --named-commands
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.NoAutoRehash">
 <summary>
 --no-auto-rehash
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.NoBeep">
 <summary>
 --no-beep
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.NoNamedCommands">
 <summary>
 --no-named-commands
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.NoPager">
 <summary>
 --no-pager
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.NoTee">
 <summary>
 --no-tee
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.OneDatabase">
 <summary>
 --one-database
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Quick">
 <summary>
 --quick
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Raw">
 <summary>
 --raw
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Reconnect">
 <summary>
 --reconnect
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.SafeUpdates">
 <summary>
 --safe-updates
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.SecureAuth">
 <summary>
 --secure-auth
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.ShowWarnings">
 <summary>
 --show-warnings
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.SigintIgnore">
 <summary>
 --sigint-ignore
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Silent">
 <summary>
 --silent
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.SkipColumnNames">
 <summary>
 --skip-column-names
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.SkipLineNumbers">
 <summary>
 --skip-line-numbers
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.SkipPager">
 <summary>
 --skip-pager
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Table">
 <summary>
 --table
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Unbuffered">
 <summary>
 --unbuffered
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Verbose">
 <summary>
 --verbose
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Version">
 <summary>
 --version
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Vertical">
 <summary>
 --vertical
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum.Wait">
 <summary>
 --wait
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum">
 <summary>
 Common unparameterized MySQL dump command prompt parameters.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.AddDropDatabase">
 <summary>
 --add-drop-database
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.AddDropTable">
 <summary>
 --add-drop-table
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.AddLocks">
 <summary>
 --add-locks
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.AllDatabases">
 <summary>
 --all-databases
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.AllowKeywords">
 <summary>
 --allow-keywords
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Comments">
 <summary>
 --comments
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Compact">
 <summary>
 --compact
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Compress">
 <summary>
 --compress
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.CompleteInsert">
 <summary>
 --complete-insert
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.CreateOptions">
 <summary>
 --create-options
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.DelayedInsert">
 <summary>
 --delayed-insert
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.DeleteMasterLogs">
 <summary>
 --delete-master-logs
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.DisableKeys">
 <summary>
 --disable-keys
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.DumpDate">
 <summary>
 --dump-date
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.ExtendedInsert">
 <summary>
 --extended-insert
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.FlushLogs">
 <summary>
 --flush-logs
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.FlushPrivileges">
 <summary>
 --flush-privileges
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Force">
 <summary>
 --force
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.HexBlob">
 <summary>
 --hex-blob
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.InsertIgnore">
 <summary>
 --insert-ignore
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.LockAllTables">
 <summary>
 --lock-all-tables
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.LockTables">
 <summary>
 --lock-tables
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.NoAutoCommit">
 <summary>
 --no-auto-commit
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.NoCreateDb">
 <summary>
 --no-create-db
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.NoCreateInfo">
 <summary>
 --no-create-info
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.NoData">
 <summary>
 --no-data
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.NoSetNames">
 <summary>
 --no-set-names
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Opt">
 <summary>
 --opt
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.OrderByPrimary">
 <summary>
 --order-by-primary
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Quick">
 <summary>
 --quick
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.QuoteNames">
 <summary>
 --quote-names
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Routines">
 <summary>
 --routines
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SetCharset">
 <summary>
 --set-charset
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SingleTransaction">
 <summary>
 --single-transaction
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipAddDropTables">
 <summary>
 --skip-add-drop-tables
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipAddLocks">
 <summary>
 --skip-add-locks
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipComments">
 <summary>
 --skip-comments
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipDisableKeys">
 <summary>
 --skip-disable-keys
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipDumpDate">
 <summary>
 --skip-dump-date
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipOpt">
 <summary>
 --skip-opt
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipSetCharset">
 <summary>
 --skip-set-charset
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipTriggers">
 <summary>
 --skip-triggers
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.SkipTzUtc">
 <summary>
 --skip-tz-utc
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Tables">
 <summary>
 --tables
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Triggers">
 <summary>
 --triggers
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.TzUtc">
 <summary>
 --tz-utc
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Verbose">
 <summary>
 --verbose
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum.Version">
 <summary>
 --version
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Dump.DumpParameterCollection">
 <summary>
 Collection of qualified MySQL and MySQL dump parameters.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.DumpParameterCollection.Items(System.Int32)">
 <summary>
 Gets an item within this instance of DumpParameterCollection
 </summary>
 <param name="index"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Add(System.String)">
 <summary>
 Adds an item in this instance of DumpParameterCollaction.
 </summary>
 <param name="value">Valid MySQL dump application parameter string.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Add(TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum)">
 <summary>
 Adds an item in this instance of DumpParameterCollaction.
 </summary>
 <param name="value">MySQL dump application parameter.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Add(TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum)">
 <summary>
  Adds an item in this instance of DumpParameterCollaction.
 </summary>
 <param name="value">MySQL application parameter.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Contains(System.String)">
 <summary>
 Validates if item is existing in this instance of DumpParameterCollection.
 </summary>
 <param name="value">Value to find.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Contains(TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum)">
 <summary>
 Validates if item is existing in this instance of DumpParameterCollection.
 </summary>
 <param name="value">Value to find.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Contains(TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum)">
 <summary>
 Validates if item is existing in this instance of DumpParameterCollection.
 </summary>
 <param name="value">Value to find.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Remove(System.String)">
 <summary>
 Removes an item in this instance of DumpParameterCollection.
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Remove(TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum)">
 <summary>
 Removes an item in this instance of DumpParameterCollection.
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Remove(TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum)">
 <summary>
 Removes an item in this instance of DumpParameterCollection.
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.DumpParameterCollection.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.#ctor(System.String,System.String,System.String,System.String)">
 <summary>
 Creates a new instance of TarsierEyes.MySQL.Dump.
 </summary>
 <param name="server">MySQL server IP or Hostname.</param>
 <param name="database">MySQL database name.</param>
 <param name="userid">MySQL database server login id.</param>
 <param name="password">MySQL database server login password.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.#ctor(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Creates a new instance of TarsierEyes.MySQL.Dump.
 </summary>
 <param name="server">MySQL server IP or Hostname.</param>
 <param name="database">MySQL database name.</param>
 <param name="userid">MySQL database server login id.</param>
 <param name="password">MySQL database server login password.</param>
 <param name="filename">MySQL dump filename.</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.CanExport">
 <summary>
 Gets whether MySQL database dumping application is present and database exportation can be performed or not. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.CanImport">
 <summary>
 Gets whether MySQL application is present and database importation can be performed or not. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.Database">
 <summary>
 Gets or sets MySQL database name.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.ErrorMessage">
 <summary>
 Gets error encountered in the last executed exportation or importation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.Filename">
 <summary>
 Gets or sets MySQL dump filename to be exported or imported.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.MaxAllowedPacket">
 <summary>
 Gets or sets max allowed packet alloted for database restoration and / or execution.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.Parameters">
 <summary>
 Gets current list of MySQL dump parameters.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.Password">
 <summary>
 Gets or sets MySQL server database login password.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.Server">
 <summary>
 Gets or sets MySQL server ip or hostname.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.UserID">
 <summary>
 Gets or sets MySQL server database login id.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Dump.PortNo">
 <summary>
 Get or sets MySQL port no
 </summary>
 <returns></returns>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Export">
 <summary>
 Performs MySQL dump exportation.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Import">
 <summary>
 Performs MySQL batch file execution.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.CanDo(TarsierEyes.MySQL.Dump.TaskEnum)">
 <summary>
 Validates whether database dumping can be performed or not.
 </summary>
 <param name="task">Export or Import.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Backup(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Performs database backup using MySQL dumping application.
 </summary>
 <param name="server">Server IP or hostname.</param>
 <param name="database">Database name.</param>
 <param name="userid">Database server login id.</param>
 <param name="password">Database server login password.</param>
 <param name="filename">Dump filename.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Backup(System.String,System.String,System.String,System.String,System.String,TarsierEyes.MySQL.Dump.DumpParameterCollection)">
 <summary>
 Performs database backup using MySQL dumping application.
 </summary>
 <param name="server">Server IP or hostname.</param>
 <param name="database">Database name.</param>
 <param name="userid">Database server login id.</param>
 <param name="password">Database server login password.</param>
 <param name="filename">Dump filename.</param>
 <param name="parameters">Additional list of valid MySQL dump parameters.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Execute(System.String,System.String)">
 <summary>
 Performs and executes the given sql statement in the specified connection using MySQL application itself.
 </summary>
 <param name="connectionstring">MySQL database connecton string.</param>
 <param name="commandtext">Valid SQL statement.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Restore(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Performs database restoration from a batch file using MySQL application.
 </summary>
 <param name="server">Server IP or hostname.</param>
 <param name="database">Database name.</param>
 <param name="userid">Database server login id.</param>
 <param name="password">Database server login password.</param>
 <param name="filename">Dump filename.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.MySQLDumpParameterString(TarsierEyes.MySQL.Dump.MySQLDumpParameterEnum)">
 <summary>
 Returns associated MySQLDump qualified command prompt parameter string.
 </summary>
 <param name="param">MySQL parameter.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.MySQLParameterString(TarsierEyes.MySQL.Dump.MySQLApplicationParameterEnum)">
 <summary>
 Returns associated MySQL qualified command prompt parameter string.
 </summary>
 <param name="param"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dump.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.ConnectionDetailEnum">
 <summary>
 Common MySQL connection string parameter values sections.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.ConnectionDetailEnum.Driver">
 <summary>
 DRIVER part of a connection string.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.ConnectionDetailEnum.Server">
 <summary>
 SERVER part of a connection string.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.ConnectionDetailEnum.Database">
 <summary>
 DATABASE part of a connection string.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.ConnectionDetailEnum.UID">
 <summary>
 UID (User Id) part of a connection string.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.ConnectionDetailEnum.PWD">
 <summary>
 PWD (Password) part of a connection string.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.ConnectionDetailEnum.Port">
 <summary>
 PORT (Port Number) part of a connection string.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.TableNameCollection">
 <summary>
 Collection of database table names.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.TableNameCollection.Items(System.Int32)">
 <summary>
 Gets or sets item in this instance of TableNameCollection.
 </summary>
 <param name="index"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.TableNameCollection.Add(System.String)">
 <summary>
 Add new item in this instance of TableNameCollection.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.TableNameCollection.Contains(System.String)">
 <summary>
 Validates if specified item is existing in this instance of TableNameCollection.
 </summary>
 <param name="value">Value to find</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.TableNameCollection.Remove(System.String)">
 <summary>
 Removes an existing item in this instance of TableNameCollection.
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.TableNameCollection.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.TableNameCollection.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.#ctor">
 <summary>
 Class for connecting into a MySQL database.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.#ctor(System.String)">
 <summary>
 Class for connecting into a MySQL database.
 </summary>
 <param name="connection">A valid MySQL connection string.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.#ctor(System.String,System.String,System.String,System.String)">
 <summary>
 Class for connecting into a MySQL database.
 </summary>
 <param name="server">Server IP or Hostname.</param>
 <param name="database">MySQL Database name.</param>
 <param name="userid">MySQL server login id.</param>
 <param name="password">MySQL server login password.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
 <summary>
 Class for connecting into a MySQL database.
 </summary>
 <param name="server">Server IP or Hostname.</param>
 <param name="database">MySQL Database name.</param>
 <param name="userid">MySQL server login id.</param>
 <param name="password">MySQL server login password.</param>
 <param name="port">MySQL connection port number.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String)">
 <summary>
 Class for connecting into a MySQL database.
 </summary>
 <param name="server">Server IP or Hostname.</param>
 <param name="database">MySQL Database name.</param>
 <param name="userid">MySQL server login id.</param>
 <param name="password">MySQL server login password.</param>
 <param name="port">MySQL connection port number.</param>
 <param name="driver">MySQL database connection driver name.</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.ConnectionString">
 <summary>
 Gets or sets MySQL connection string.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Database">
 <summary>
 Gets or sets MySQL database name.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Driver">
 <summary>
 Gets or sets MySQL server database driver.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Server">
 <summary>
 Gets or sets MySQl server name.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.UserID">
 <summary>
 Gets or sets MySQL server login ID.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Password">
 <summary>
 Gets or sets MySQL server login password.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Port">
 <summary>
 Gets or sets MySQL database connection port number.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.CanConnect">
 <summary>
 Gets whether connection can be established using supplied database connection string and / or details.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.DateAndTime">
 <summary>
 Gets current connected server's date and time.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.InvokeConnection">
 <summary>
 Calls the connection validator asynchronously.
 </summary>
 <returns>Boolean by calling EndInvoke method.</returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Connects(System.String,System.String,System.String,System.String)">
 <summary>
 Calls TarsierEyes.MySQL class' CanConnect Property to verify whether a connection can be established using given connection string values.
 </summary>
 <param name="server">Server's IP or hostname.</param>
 <param name="database">Database name.</param>
 <param name="userid">Database server login id.</param>
 <param name="password">Database server login password.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.BeginConnect(System.String,System.String,System.String,System.String)">
 <summary>
 Calls TarsierEyes.MySQL class' CanConnect Property asynchronously to verify whether a connection can be established using given connection string values.
 </summary>
 <param name="server">Server's IP or hostname.</param>
 <param name="database">Database name</param>
 <param name="userid">Database server login id.</param>
 <param name="password">Database server login password.</param>
 <returns>Boolean upon calling EndInvoke method.</returns>
 <remarks>Must call EndConnect to get the value.</remarks>
</member>
<member name="M:TarsierEyes.MySQL.EndConnect(System.IAsyncResult)">
 <summary>
 Calls the result of the BeginConnect function to verify whether a connection can be established using given connection string values.
 </summary>
 <param name="ar">AsyncResult interface used to invoke the connection validator.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.ConnectionStringValue(System.String,TarsierEyes.MySQL.ConnectionDetailEnum)">
 <summary>
 Gets an assigned SQL connection string parameter value.
 </summary>
 <param name="connection">Connection string to evaluate.</param>
 <param name="detail">Detail parameter to get.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.ConnectionStringValue(System.String,System.String)">
 <summary>
 Gets an assigned SQL connection string parameter value.
 </summary>
 <param name="connection">Connection string to evaluate.</param>
 <param name="detail">Detail parameter to get.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.ServerDateAndTime(System.String)">
 <summary>
 Gets the server's current date and time using the supplied connection string.
 </summary>
 <param name="connection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.DatabaseTables">
 <summary>
 Gets list of table names inside the connected database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.DatabaseTables(System.String)">
 <summary>
 Gets list of table names inside the database using the given connection string.
 </summary>
 <param name="connection">MySQL valid connection string.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.GetStatementTableName(System.String)">
 <summary>
 Gets the first instance of table name in the specified query statement.
 </summary>
 <param name="query">Select statement</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.GetStatementTableName(System.String,System.Data.OleDb.OleDbConnection)">
 <summary>
 Gets the first instance of table name in the specified query statement.
 </summary>
 <param name="query">Select statement.</param>
 <param name="con">Connection object.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.GetStatementTableName(System.String,MySql.Data.MySqlClient.MySqlConnection)">
 <summary>
 Gets the first instance of table name in the specified query statement.
 </summary>
 <param name="query">Select statement.</param>
 <param name="con">Connection object.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Que">
 <summary>
 Class for MySQL query executions and data loading.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Que.ExecutionEnum">
 <summary>
 Query execution.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Que.ExecutionEnum.ExecuteReader">
 <summary>
 ExecuteReader : Run a query and load its result set into a DataTable.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Que.ExecutionEnum.ExecuteNonQuery">
 <summary>
 ExecuteNonQuery : runs a data updating query and count the rows affected by the statement.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Que.DataRetrieverEnum">
 <summary>
 Query retrieval method.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Que.DataRetrieverEnum.UseDataReader">
 <summary>
 Use sql data reader.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Que.DataRetrieverEnum.UseAdapter">
 <summary>
 Use sql data adapter and dispose the resource adapter.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.Que.DataRetrieverEnum.UseAdapterAndRetain">
 <summary>
 Use sql data adapter and retain the resource adapter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.MySQL.Que.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.#ctor(System.String)">
 <summary>
 Creates a new instance of TarsierEyes.MySQL.Que.
 </summary>
 <param name="connection">MySQL server database connection string.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.#ctor(System.String,System.String)">
 <summary>
 Creates a new instance of TarsierEyes.MySQL.Que.
 </summary>
 <param name="connection">MySQL server database connection string.</param>
 <param name="command">MySQL command to be executed.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.#ctor(System.String,System.String,System.Int32)">
 <summary>
 Creates a new instance of TarsierEyes.MySQL.Que.
 </summary>
 <param name="connection">MySQL server database connection string.</param>
 <param name="command">MySQL command to be executed.</param>
 <param name="maxpacket">Max allowed packet for each execution (in MB).</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.Adapter">
 <summary>
 Gets the retained sql data adapter.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.Columns">
 <summary>
 Gets resultset column count after query execution. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.CommandText">
 <summary>
 Gets or sets MySQL command text to execute.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.ConnectionString">
 <summary>
 Gets or sets MySQL server database connection string.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.DataTable">
 <summary>
 Gets resultset after query execution.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.ErrorMessage">
 <summary>
 Gets error message catched upon query execution.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.MaxAllowedPacket">
 <summary>
 Gets or sets max allowed packet for each query execution (in MB).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Que.Rows">
 <summary>
 Gets number of rows retreived or affected by the query execution.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.ExecuteNonQuery">
 <summary>
 Performs data updating queries in the database.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.ExecuteReader">
 <summary>
 Performs retreiving and loading of data in the resultset data table.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.ExecuteReader(TarsierEyes.MySQL.Que.DataRetrieverEnum)">
 <summary>
 Performs retreiving and loading of data in the resultset data table.
 </summary>
 <param name="retieval">Determines what method will be used for filling the record into the table.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.ExecuteReader(System.Object)">
 <summary>
 Performs retreiving and loading of data in the resultset data table.
 </summary>
 <param name="progressbar">Progress bar object to reflect the loading status of the result set.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.InvokeReader">
 <summary>
 Calls ExecuteReader method asynchronously.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.InvokeReader(System.Object)">
 <summary>
 Calls ExecuteReader method asynchronously.
 </summary>
 <param name="progressbar">Progress bar object to reflect the loading status of the result set.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.InvokeNonQuery">
 <summary>
 Calls ExecuteNonQuery method asynchronously.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.RedirectLoad">
 <summary>
 Gets output datatable from iterated datareader using the supplied connection string and command text in this instance of TarsierEyes.MySQL.Que.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValue">
 <summary>
 Gets the value of the first column in the first row of the result set.  
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValue``1">
 <summary>
 Gets the value of the first column in the first row of the result set in type-safe manner.
 </summary>
 <typeparam name="TResult">Expected data type of the returning value.</typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValue(System.Object)">
 <summary>
 Gets the value of the first column in the first row of the result set.  
 </summary>
 <param name="defaultvalue">Default value to return if there is nothing.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValue``1(``0)">
 <summary>
 Gets the value of the first column in the first row of the result set in type-safe manner.
 </summary>
 <typeparam name="TResult">Expected data type of the returning value.</typeparam>
 <param name="defaultvalue">Default value to return if there is nothing.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValue(System.String,System.String)">
 <summary>
 Gets the value of the first column in the first row of the result set.
 </summary>
 <param name="connection">Database connection string.</param>
 <param name="command">Database command text to execute.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValue(System.String,System.String,System.Object)">
 <summary>
 Gets the value of the first column in the first row of the result set.
 </summary>
 <param name="connection">Database connection string.</param>
 <param name="command">Database command text to execute.</param>
 <param name="defaultvalue">Default value to return if there is nothing.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValue``1(System.String,System.String,``0)">
 <summary>
 Gets the value of the first column in the first row of the result set in type-safe manner.
 </summary>
 <typeparam name="TResult">Expected data type of the returning value.</typeparam>
 <param name="connection">Database connection string.</param>
 <param name="command">Database command text to execute.</param>
 <param name="defaultvalue">Default value to return if there is nothing.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValues(System.String,System.String)">
 <summary>
 Gets the value of the first column of each retreived result set rows.
 </summary>
 <param name="connection">Database connection string.</param>
 <param name="command">Database command text to execute.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.GetValues``1(System.String,System.String)">
 <summary>
 Gets the value of the first column of each retreived result set rows in type-safe manner.
 </summary>
 <typeparam name="TResult">Expected data type of the returning value.</typeparam>
 <param name="connection">Database connection string.</param>
 <param name="command">Database command text to execute.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.BeginInvoke(System.String,System.String,TarsierEyes.MySQL.Que.ExecutionEnum)">
 <summary>
 Calls TarsierEyes.MySQL.Que class' Invoke functions to perform synchronous query execution.
 </summary>
 <param name="connection">Database server connection string.</param>
 <param name="query">Command text to execute.</param>
 <param name="execute">Type of execution.</param>
 <returns></returns>
 <remarks>Must call EndInvoke function to get que results.</remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.BeginInvoke(System.String,System.String,TarsierEyes.MySQL.Que.ExecutionEnum,System.Object)">
 <summary>
 Calls TarsierEyes.MySQL.Que class' Invoke functions to perform synchronous query execution.
 </summary>
 <param name="connection">Database server connection string.</param>
 <param name="query">Command text to execute.</param>
 <param name="execute">Type of execution.</param>
 <param name="progressbar">Progress bar object to reflect the loading status.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.EndInvoke(System.IAsyncResult)">
 <summary>
 Ends the initiated BeginInvoke function to get que results and details.
 </summary>
 <param name="ar">AsyncResult interface use to call the BeginInvoke function.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.Execute(System.String,System.String,TarsierEyes.MySQL.Que.ExecutionEnum)">
 <summary>
 Calls the TarsierEyes.MySQL.Que class' ExecuteReader or ExecuteNonQuery methods to execute query commands.
 </summary>
 <param name="connection">Database server connection string.</param>
 <param name="query">Database command text.</param>
 <param name="execution">Execution type.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.Execute(System.String,System.String,TarsierEyes.MySQL.Que.ExecutionEnum,TarsierEyes.MySQL.Que.DataRetrieverEnum)">
 <summary>
 Calls the TarsierEyes.MySQL.Que class' ExecuteReader or ExecuteNonQuery methods to execute query commands.
 </summary>
 <param name="connection">Database server connection string.</param>
 <param name="query">Database command text.</param>
 <param name="execution">Execution type.</param>
 <param name="retriver">Determines what method will be used for filling up the records into the table.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.Execute(System.String,System.String,TarsierEyes.MySQL.Que.ExecutionEnum,System.Object)">
 <summary>
 Calls the TarsierEyes.MySQL.Que class' ExecuteReader or ExecuteNonQuery methods to execute query commands.
 </summary>
 <param name="connection">Database server connection string.</param>
 <param name="query">Database command text.</param>
 <param name="execution">Execution type.</param>
 <param name="progressbar">Progress bar object to reflect the loading status.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.RedirectLoad(System.String,System.String)">
 <summary>
 Gets output datatable from iterated datareader using the supplied connection string and command text.
 </summary>
 <param name="connection">MySQL database connection string.</param>
 <param name="command">MySQL query statement.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Que.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.SessionTables">
 <summary>
 Database session table enumerations.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.SessionTables.BaseTable">
 <summary>
 Database session's BaseTable
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.MySQL.SessionTables.ViewTable">
 <summary>
 Database session's ViewTable
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.Session">
 <summary>
 Database session and control binding class.
 </summary>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.AfterDataLoading">
 <summary>
 Occurs after the BaseTable and ViewTable data loading routines has been called and executed.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.AfterUpdate">
 <summary>
 Occurs after the database updating routines were done.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.BeforeDataLoading">
 <summary>
 Occurs before BaseTable and ViewTable will be filled by data.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.BeforeUpdate">
 <summary>
 Occurs before the actual database updating takes effect.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.UpdateFailed">
 <summary>
 Occurs when database updating failed due to an unhandled exception.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.UpdateFinalized">
 <summary>
 Occurs when all of the updates into the current database session and its dependent detail sessions has been committed.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.UpdateFinalizing">
 <summary>
 Occurs when committing all of the updates into the current database session and its dependent detail sessions.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:TarsierEyes.MySQL.Session.UpdateSucceed">
 <summary>
 Occurs when database updating succeeds.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.Adapter">
 <summary>
 Gets the adapter object for this current database session.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.BaseCommandText">
 <summary>
 Gets or sets the current database session's sql statement that is used to load data into the current session's table.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.BaseTable">
 <summary>
 Gets the updating table for this current database session.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.Connection">
 <summary>
 Gets the current database session's database connection object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.ConnectionString">
 <summary>
 Gets or sets the current database session's connection string.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.CurrentEventArgument">
 <summary>
 Gets the current running base event argument of the current database session.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.Details">
 <summary>
 Gets the collection of detail database session parented into the current database session (header-detail table relationship).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.ForeignKey">
 <summary>
 Gets or sets the session table's assigned primary key field. Field value will then be refered to the parent's PrimaryKey field (for header-detail table relationship). 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.Header">
 <summary>
 Gets the current database session's parent (header-detail table relationship).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.PrimaryKey">
 <summary>
 Gets or sets the session table's assigned primary key field. This will then be refered into dependent details thru ForeignKey assigned value (for header-detail table relationship).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.SqlStatements">
 <summary>
 Gets the current database session's table-updating sql command statements.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.Transaction">
 <summary>
 Gets the current database session's updating transaction object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.ViewCommandText">
 <summary>
 Gets or sets the customized schema database session table's sql commadn statement that is currently representing the BaseTable. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.Session.ViewTable">
 <summary>
 Gets the customized schema database session table that is currently representing the BaseTable.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.#ctor">
 <summary>
 Creates a new instance of MySQL.Session.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.#ctor(System.String,System.String)">
 <summary>
 Creates a new instance of MySQL.Session.
 </summary>
 <param name="dbconnectionstring">Database connection string.</param>
 <param name="basesqlstatement">Base table commandtext.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.#ctor(System.String,System.String,System.String)">
 <summary>
 Creates a new instance of MySQL.Session.
 </summary>
 <param name="dbconnectionstring">Database connection string.</param>
 <param name="basesqlstatement">Base table commandtext.</param>
 <param name="viewsqlstatement">View table commandtext.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.#ctor(TarsierEyes.MySQL.Session)">
 <summary>
 Creates a new instance of MySQL.Session. 
 </summary>
 <param name="parent">Header database session.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.#ctor(TarsierEyes.MySQL.Session,System.String,System.String)">
 <summary>
 Creates a new instance of MySQL.Session. 
 </summary>
 <param name="parent">Header database session.</param>
 <param name="dbconnectionstring">Database connection string.</param>
 <param name="basesqlstatement">Base table commandtext.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.#ctor(TarsierEyes.MySQL.Session,System.String,System.String,System.String)">
 <summary>
 Creates a new instance of MySQL.Session. 
 </summary>
 <param name="parent">Header database session.</param>
 <param name="dbconnectionstring">Database connection string.</param>
 <param name="basesqlstatement">Base table commandtext.</param>
 <param name="viewsqlstatement">View table commandtext.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.BeginLoad">
 <summary>
 Loads data into the current database session's tables asynchronously.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.BeginLoadAll">
 <summary>
 Loads data into the current database session's tables and into its associated detail database sessions asynchronously.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.BeginSave">
 <summary>
 Saves the changes made from the current database session and its dependent detail sessions into the connected database tables asynchronously.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.AttachViewTableHandlers">
 <summary>
 Attach row validating handlers into the ViewTable making the changes on the ViewTable to take effect in the BaseTable.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.Bind(System.Object)">
 <summary>
 Binds the specified control's DataSource property with the current database session's ViewTable.
 </summary>
 <param name="control">Binded control.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.Bind(System.Object,System.String)">
 <summary>
 Binds the specified control's value with a particular database session ViewTable field. Specifying a blank field name will have the whole ViewTable binded into the control (if it has an available DataSource property).
 </summary>
 <param name="control">Binded control.</param>
 <param name="fieldname">ViewTable / BaseTable field name</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.EndLoad(System.IAsyncResult)">
 <summary>
 Ends the asynchronous call of the initialized BeginLoad or BaginLoadAll methods.
 </summary>
 <param name="initbeginload"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.EndSave(System.IAsyncResult)">
 <summary>
 Ends the asynchronous call of the initialized BeginSave method.
 </summary>
 <param name="initibeginsave"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.Load">
 <summary>
 Loads data into the current database session's tables.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.LoadAll">
 <summary>
 Loads data into the current database session's tables and into its associated detail database sessions.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.RemoveViewTableHandler">
 <summary>
 Removes the row validating handlers from the ViewTable.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.Save">
 <summary>
 Saves the changes made from the current database session and its dependent detail sessions into the connected database tables.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.Unbind(System.Object)">
 <summary>
 Unbinds the current control into the current database session's ViewTable and any of its fields.
 </summary>
 <param name="control"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.Session.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.SessionCollection">
 <summary>
 Collection of database detail session.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionCollection.Items(System.Int32)">
 <summary>
 Gets the database session in the specified index of the collection.
 </summary>
 <param name="index"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionCollection.Items(System.String)">
 <summary>
 Gets the a database session with the specified BaseTable table name from the collection.
 </summary>
 <param name="tablename"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionCollection.Parent">
 <summary>
 Gets the current header session for the current collection of database session.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.#ctor(TarsierEyes.MySQL.Session)">
 <summary>
 Creates a new instance of SessionCollection.
 </summary>
 <param name="header">Header database session.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.Add">
 <summary>
 Adds a new detail database session into the collection.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.Add(System.String)">
 <summary>
 Adds a new detail database session into the collection.
 </summary>
 <param name="basecommandtext">Base table commandtext.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.Add(System.String,System.String)">
 <summary>
 Adds a new detail database session into the collection.
 </summary>
 <param name="basecommandtext">Base table commandtext.</param>
 <param name="viewcommandtext">View table commandtext.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.Contains(TarsierEyes.MySQL.Session)">
 <summary>
 Returns whether the current session already exists in the collection.
 </summary>
 <param name="session"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.Contains(System.String)">
 <summary>
 Returns whether a database session with the specified BaseTable name already exists in the collection.
 </summary>
 <param name="tablename"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.Remove(TarsierEyes.MySQL.Session)">
 <summary>
 Removes the specified database session from the collection.
 </summary>
 <param name="session"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionCollection.Remove(System.String)">
 <summary>
 Removes a particular database session with the specified BaseTable name from the collection.
 </summary>
 <param name="tablename"></param>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.SessionDataBinding">
 <summary>
 Database session binding information.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionDataBinding.Control">
 <summary>
 Gets the object to where the current associated database session's ViewTable or ViewTable field value is binded into.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionDataBinding.Field">
 <summary>
 Gets the field name to where the binding takes effect. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionDataBinding.Session">
 <summary>
 Gets the current associated database session.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionDataBinding.#ctor(TarsierEyes.MySQL.Session,System.Object)">
 <summary>
 Creates a new instance of SessionDataBinding.
 </summary>
 <param name="owner">Associated database session.</param>
 <param name="bindedcontrol">Binded control</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionDataBinding.#ctor(TarsierEyes.MySQL.Session,System.Object,System.String)">
 <summary>
 Creates a new instance of SessionDataBinding.
 </summary>
 <param name="owner">Associated database session.</param>
 <param name="bindedcontrol">Binded control</param>
 <param name="bindedfield">Binded database session ViewTable field name.</param>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.SessionEventArgs">
 <summary>
 Database session data loading and saving event arguments.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionEventArgs.Cancel">
 <summary>
 Gets or sets whether to cancel the preceeding events after calling the current event that returns this argument.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionEventArgs.Changes">
 <summary>
 Gets the gathered changes into the current database session's BaseTable.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionEventArgs.Exception">
 <summary>
 Gets or sets the returning exception indicating a error occurance while loading and / or saving data.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionEventArgs.Loaded">
 <summary>
 Gets whether the current calling database session's data has been successully loaded or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionEventArgs.Session">
 <summary>
 Gets the current evaluated / calling database session object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionEventArgs.#ctor(TarsierEyes.MySQL.Session)">
 <summary>
 Creates a new instance of SessionEventArgs.
 </summary>
 <param name="callingsession"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionEventArgs.GetChanges">
 <summary>
 Loads all the changes made from the current database session into the Changes table.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.MySQL.SessionStatements">
 <summary>
 Session statement information.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionStatements.DeleteStatement">
 <summary>
 Gets or sets the current database session's associated delete sql statements for removed table rows.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionStatements.InsertStatement">
 <summary>
 Gets or sets the current database session's associated insert sql statements for newly added table rows.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionStatements.Session">
 <summary>
 Gets the parented session for this sql statements.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.MySQL.SessionStatements.UpdateStatement">
 <summary>
 Gets or sets the current database session's associated update sql statements for changed table rows.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionStatements.#ctor(TarsierEyes.MySQL.Session)">
 <summary>
 Creates a new instance of SessionStatements.
 </summary>
 <param name="owner"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.MySQL.SessionStatements.InitializeStatements">
 <summary>
 Generates suggested command statements for the current database session.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.EDI.EDIReader">
 <summary>
 Class to open and read contents of an EDIWriter-generated file.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.EDI.EDIReader.Filename">
 <summary>
 Gets the filename to read the contents from.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.EDI.EDIReader.DecryptionKey">
 <summary>
 Gets or sets decryption key to decipher encrypted contents of the file.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.#ctor(System.String)">
 <summary>
 Create a new instance of TarsierEyes.EDI.EDIReader.
 </summary>
 <param name="filename">Filename to read the contents from.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.#ctor(System.String,System.String)">
 <summary>
 Create a new instance of TarsierEyes.EDI.EDIReader.
 </summary>
 <param name="filename">Filename to read the contents from.</param>
 <param name="decryptionkey">Decryption key to decipher encrypted contents of the file.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.Read">
 <summary>
 Retreives the unencrypted contents of the specified EDI file.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.ReadLines">
 <summary>
 Retreives the unencrypted contents of the specified EDI file and breaks it into interpreted lines.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.Read(System.String)">
 <summary>
  Retreives the unencrypted contents of the specified EDI file.
 </summary>
 <param name="filename">Filename of the EDI to retreive the contents from.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.Read(System.String,System.String)">
 <summary>
  Retreives the unencrypted contents of the specified EDI file.
 </summary>
 <param name="filename">Filename of the EDI to retreive the contents from.</param>
 <param name="decryptionkey">Decryption key to decipher encrypted contents of the file.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.ReadLines(System.String)">
 <summary>
 Retreives the unencrypted contents of the specified EDI file and breaks it into interpreted lines.
 </summary>
 <param name="filename">Filename of the EDI to retreive the contents from.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.ReadLines(System.String,System.String)">
 <summary>
 Retreives the unencrypted contents of the specified EDI file and breaks it into interpreted lines.
 </summary>
 <param name="filename">Filename of the EDI to retreive the contents from.</param>
 <param name="decryptionkey">Decryption key to decipher encrypted contents of the file.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIReader.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.EDI.EDIWriter">
 <summary>
 Class for creating a custom-extensioned text file with database importations and encryption features.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.EDI.EDIWriter.EncrytionKey">
 <summary>
 Gets or sets encryption key to use; setting to an empty string will result to unencrypted text contents.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.EDI.EDIWriter.Filename">
 <summary>
 Gets the filename spcified upon creating a new instance.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.EDI.EDIWriter.Text">
 <summary>
 Gets the text to be written in the file specified upon creating a new instance.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.#ctor(System.String,System.String)">
 <summary>
 Creates new instance of TarsierEyes.EDI.EDIWriter.
 </summary>
 <param name="filename">EDI filename</param>
 <param name="text">Text to be written</param>
 <remarks>Unencrypted text contents if EncryptionKey property is not set.</remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.#ctor(System.String,System.String,System.String)">
 <summary>
 Creates new instance of TarsierEyes.EDI.EDIWriter.
 </summary>
 <param name="filename">EDI filename</param>
 <param name="text">Text to be written</param>
 <param name="enryptionkey">Encryption key to use for text encrypting.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.BeginInvoke">
 <summary>
 Returns IAsyncResult interface of a .Write call.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.EndInvoke(System.IAsyncResult)">
 <summary>
 Gets the result of .Write call and ending the running delegate.
 </summary>
 <param name="ar">IAsyncResult interface that was ended.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.Write">
 <summary>
 Writes the specified text in this instance to the specified file.
 </summary>
 <returns>False if writing fails.</returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.Write(System.String,System.String)">
 <summary>
  Writes the specified text to the specified file.
 </summary>
 <param name="filename">EDI filename.</param>
 <param name="text">Text to be written.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.Write(System.String,System.String,System.String)">
 <summary>
 Writes the specified text to the specified file.
 </summary>
 <param name="filename">EDI filename.</param>
 <param name="text">Text to be written.</param>
 <param name="encryptionkey">Encryption key to use.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.Write(System.String,System.String,System.String,System.String)">
 <summary>
 Writes clip-delimited database resultset contents to the specified file. 
 </summary>
 <param name="filename">EDI filename.</param>
 <param name="connection">MySQL connection string</param>
 <param name="commandtext">MySQL select statement</param>
 <param name="encryptionkey">Encryption key to use</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.Write(System.String,System.String,TarsierEyes.MySQL.Dump.DumpParameterCollection,System.String)">
 <summary>
 Writes contents using MySQL dump into an specified file.
 </summary>
 <param name="filename">EDI filename.</param>
 <param name="connection">MySQL connection string.</param>
 <param name="dumpparameters">Valid MySQL dump parameter list.</param>
 <param name="encryptionkey">Encryption key to use.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.EDIWriter.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.EDI.IniFile">
 <summary>
 Ini file reader and writer.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.#ctor(System.String)">
 <summary>
 Creates a new instance of IniReader.
 </summary>
 <param name="filename"></param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.EDI.IniFile.Filename">
 <summary>
 Gets or sets file to read the settings from.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.EDI.IniFile.Sections(System.String,System.String)">
 <summary>
 Gets the assigned value of a key within the specified section in the ini file.
 </summary>
 <param name="section">Ini file section.</param>
 <param name="key">Ini file section key.</param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.IsIniFile">
 <summary>
 Validates whether the filename specified is a ini file.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.Contents">
 <summary>
 Gets the ini file's contents.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.ReadSection(System.String,System.String)">
 <summary>
 Gets the assigned value of a key within the specified section in the ini file.
 </summary>
 <param name="section"></param>
 <param name="key"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.SetValue(System.String,System.String,System.String)">
 <summary>
 Sets a value in the specified key of the specified section within the ini file's contents.
 </summary>
 <param name="section">Ini file section.</param>
 <param name="key">Ini file section key.</param>
 <param name="value">Key value to assign.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.GetKeyValue(System.String,System.String,System.String)">
 <summary>
 Calls the IniFile class' Section property to get an specific key value under the specified section within the specified ini file.
 </summary>
 <param name="filename">Ini file path.</param>
 <param name="section">Section in the ini file.</param>
 <param name="key">Key to get the value from.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.SetKeyValue(System.String,System.String,System.String,System.String)">
 <summary>
 Calls the IniFile class' SetValue function to assign a value in the specified key under the specified section of the specified ini file.
 </summary>
 <param name="filename"></param>
 <param name="section"></param>
 <param name="key"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.EDI.IniFile.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Email">
 <summary>
 Class for sending emails (supports gmail and yahoo mail).
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Email.MailHostEnum">
 <summary>
 Mail servers.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Email.MailHostEnum.CustomMail">
 <summary>
 Custom assigned mail server address.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Email.MailHostEnum.Gmail">
 <summary>
 Mail server : smtp.gmail.com
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Email.MailHostEnum.YahooMail">
 <summary>
 Mail server : smtp.mail.yahoo.com
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Email.MailHostEnum.amsfms">
 <summary>
 Mail server : mail.fms.com.ph
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Email.MailHostEnum.others">
 <summary>
 Mail server : other mail servers
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Email.MailAttachmentCollection">
 <summary>
 Derived class for email file attachments.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.MailAttachmentCollection.Files(System.Int32)">
 <summary>
 Gets or sets file attachment in the specified index of the collection.
 </summary>
 <param name="index"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.MailAttachmentCollection.Add(System.Net.Mail.Attachment)">
 <summary>
 Adds a file attachment in the collection.
 </summary>
 <param name="file"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.MailAttachmentCollection.Add(System.String)">
 <summary>
 Adds a file attachment in the collection.
 </summary>
 <param name="filename">File's path.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.MailAttachmentCollection.Contains(System.Net.Mail.Attachment)">
 <summary>
 Validates whether the specified file is currently existing within the collection.
 </summary>
 <param name="file"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.MailAttachmentCollection.Remove(System.Net.Mail.Attachment)">
 <summary>
 Removes the specified email attachment within the collection.
 </summary>
 <param name="file"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.MailAttachmentCollection.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.MailAttachmentCollection.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.#ctor(System.String)">
 <summary>
 Creates a new instance of Email.
 </summary>
 <param name="host">Mail server hostname.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.#ctor(System.String,System.String,System.String)">
 <summary>
 Creates a new instance of Email.
 </summary>
 <param name="host">Mail server hostname.</param>
 <param name="uid">Mail account user id.</param>
 <param name="pwd">Mail account password.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.#ctor(System.String,System.String)">
 <summary>
 Creates a new instance of Email.
 </summary>
 <param name="host">Mail server hostname.</param>
 <param name="port">Mail server port number.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.#ctor(System.String,System.String,System.String,System.String)">
 <summary>
 Creates a new instance of Email.
 </summary>
 <param name="host">Mail server hostname.</param>
 <param name="port">Mail server port number.</param>
 <param name="uid">Mail account user id.</param>
 <param name="pwd">Mail account password.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.#ctor(TarsierEyes.Email.MailHostEnum)">
 <summary>
 Creates a new instance of Email.
 </summary>
 <param name="mail">Predefined mail server. Value should not be a CustomMail.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.#ctor(TarsierEyes.Email.MailHostEnum,System.String,System.String)">
 <summary>
 Creates a new instance of Email.
 </summary>
 <param name="mail">Predefined mail server. Value should not be a CustomMail.</param>
 <param name="uid">Mail account user id.</param>
 <param name="pwd">Mail account password.</param>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.Attachments">
 <summary>
 Gets the email's file attachment information.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.BCC">
 <summary>
 Gets email's blind carbon copy recipient(s) information.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.Body">
 <summary>
 Gets or sets email's message contents.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.CC">
 <summary>
 Gets email's carbon copy recipient(s) information.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.Credentials">
 <summary>
 Gets or sets mail account login credentials.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.EnableSSL">
 <summary>
 Gets or sets whether mail server's SSL will be enabled or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.ErrorMessage">
 <summary>
 Gets the error message of the last failed email sending attempt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.From">
 <summary>
 Gets or sets email sender's information.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.Host">
 <summary>
 Gets or sets mail server hostname.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.InnerException">
 <summary>
 Gets the inner exception details of the last failed email sending attempt. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.IsBodyHTML">
 <summary>
 Gets or sets whether email message body will be threated as an html or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.Port">
 <summary>
 Gets or sets mail server port number.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.Sent">
 <summary>
 Gets whether last email sending attempt is successfully sent or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.Subject">
 <summary>
 Gets or sets email's subject / title.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.To">
 <summary>
 Gets email recipient(s) information.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Email.UseDefaultCredentials">
 <summary>
 Gets or sets whether default network credentials shall be use to log on to the mail server or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:TarsierEyes.Email.Send">
 <summary>
 Attempts to send the email.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.BeginSend">
 <summary>
 Calls the Send method and run it asynchronously. Must call the EndSend method once IAsynResult is finish.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.EndSend(System.IAsyncResult)">
 <summary>
 Finalized the BeginSend call using its produced IAsynResult interface.
 </summary>
 <param name="async"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Email.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.LoadScreen">
 <summary>
 Loading form dialog.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.LoadScreen.LoadingImageEnum">
 <summary>
 Loading image.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.LoadScreen.LoadingImageEnum.AjaxLoadBlack">
 <summary>
 Conventional ajax circle loading image (black).
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.LoadScreen.LoadingImageEnum.AjaxLoadBlue">
 <summary>
 Conventional ajax circle loading image (blue).
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.LoadScreen.LoadingImageEnum.AjaxLoadRed">
 <summary>
 Conventional ajax circle loading image (red).
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.LoadScreen.LoadingImageEnum.Custom">
 <summary>
 Custom loading image assigned thru CustomLoadImage Shared Property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.LoadScreen.LoadingImage">
 <summary>
 Gets or sets loading image to use.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.LoadScreen.CustomImage">
 <summary>
 Gets or sets custom loading image when LoadingImage Shared Property is set to Custom.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.LoadScreen.IsDisplayed">
 <summary>
 Gets whether LoadingScreen is currently displayed on the screen or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.#ctor">
 <summary>
 Creates a new instance of LoadScreen.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.#ctor(System.Threading.Thread)">
 <summary>
 Creates a new instance of LoadScreen.
 </summary>
 <param name="thread">Thread to determine the timeline of the loading display.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.#ctor(System.IAsyncResult)">
 <summary>
 Creates a new instance of LoadScreen.
 </summary>
 <param name="sync">IASyncResult interface to determine the timeline of the loading display.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.GetLoadImage(TarsierEyes.LoadScreen.LoadingImageEnum)">
 <summary>
 Gets the default loading images.
 </summary>
 <param name="image"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.Show">
 <summary>
 Displays the LoadScreen to the user.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.Show(System.Windows.Forms.IWin32Window)">
 <summary>
 Displays the LoadScreen to the user.
 </summary>
 <param name="owner">Any object that implements IWin32Window and represents the top-level window that will own the LoadingScreen.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.ShowDialog">
 <summary>
 Shows the LoadingScreen as a modal dialog box up until timeline defending on the given System.Threading.Thread or System.IASyncResult is finished or until the Close() method is called.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.ShowDialog(System.Windows.Forms.IWin32Window)">
 <summary>
 Shows the LoadingScreen as a modal dialog box up until timeline defending on the given System.Threading.Thread or System.IASyncResult is finished or until the Close() method is called.
 </summary>
 <param name="owner">Any object that implements IWin32Window and represents the top-level window that will own the LoadingScreen.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.Close">
 <summary>
 Closes the LoadingScreen.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.Dispose(System.Boolean)">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadScreen.Dispose">
 <summary>
 Dispose off any resources used by the class to free up memory space.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.GrippedTextBox">
 <summary>
 Textbox editor with sizeable grip border.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.GrippedTextBox.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Controls.GrippedTextBox.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.GrippedTextBox.Dispose(System.Boolean)">
 <summary>
 Releases the unmanaged resources used by the TarsierEyes.Controls.GrippedTextBox and optionally releases the managed resources.
 </summary>
 <param name="disposing"></param>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.RequiredFieldMarker">
 <summary>
 Control extender for marking input controls with a tiny indicator.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.RequiredFieldMarker.IndicatorPositionEnum">
 <summary>
 Required field marking's position within the controls bounds.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.RequiredFieldMarker.IndicatorPositionEnum.LeftTop">
 <summary>
 Upper left corner of the control.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.RequiredFieldMarker.IndicatorPositionEnum.RigthTop">
 <summary>
 Upper right corner of the control.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Controls.RequiredFieldMarker.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.RequiredFieldMarker.IndicatorPosition">
 <summary>
 Gets or sets required field indicator's position within the control's bounds.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.GetRequired(System.Windows.Forms.Control)">
 <summary>
 Gets required field indicator's presence for this control.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.SetRequired(System.Windows.Forms.Control,System.Boolean)">
 <summary>
 Sets required field indicator's presence for this control.
 </summary>
 <param name="ctrl"></param>
 <param name="req"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.GetRequiredIndicatorColor(System.Windows.Forms.Control)">
 <summary>
 Gets required field indicator's fill color.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.SetRequiredIndicatorColor(System.Windows.Forms.Control,System.Drawing.Color)">
 <summary>
 Sets required field indicator's fill color.
 </summary>
 <param name="ctrl"></param>
 <param name="clr"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.CanExtend(System.Object)">
 <summary>
 Validates if evaluated control is supported by P5Require.
 </summary>
 <param name="extendee">Control to be evaluated.</param>
 <returns>True or false</returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.ControlIsRequired(System.Windows.Forms.Control)">
 <summary>
 Returns whether the specified control is marked as required using the RequiredFieldMarker.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.IsRequired(System.Windows.Forms.Control)">
 <summary>
 True if enclosed control was marked as required, otherwise false.
 </summary>
 <param name="ctrl">Control to be evaluated.</param>
 <returns>True or false</returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.SetAsRequired(System.Windows.Forms.Control)">
 <summary>
 Sets a control with a required field indicator.
 </summary>
 <param name="ctrl">Control to be mark with</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.SetAsRequired(System.Windows.Forms.Control[])">
 <summary>
 Sets and attaches each of the specified controls with a rquired field indicator.
 </summary>
 <param name="ctrls"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.SetAsRequired(System.Windows.Forms.Control,System.Boolean)">
 <summary>
 Sets or unsets a control with a required field indicator.
 </summary>
 <param name="ctrl">Control to be mark / unmark with</param>
 <param name="required">Determines whether to place a mark or not</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.SetAsRequired(System.Windows.Forms.Control,TarsierEyes.Controls.RequiredFieldMarker.IndicatorPositionEnum)">
 <summary>
 Sets a control with a required field indicator in the specified position within the control's bounds..
 </summary>
 <param name="ctrl">Control to be mark with</param>
 <param name="position">Position to place the mark</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.SetAsRequired(System.Windows.Forms.Control,TarsierEyes.Controls.RequiredFieldMarker.IndicatorPositionEnum,System.Drawing.Color)">
 <summary>
 Sets a control with a required field indicator in the specified position within the control's bounds..
 </summary>
 <param name="ctrl">Control to be mark with</param>
 <param name="position">Position to place the mark</param>
 <param name="color">Required field indicator's fill color</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.UpdateIndicator(System.Windows.Forms.Control)">
 <summary>
 Updates 'required' marked control just in case there is a repainting of the marked control and
 the indicator attached to it needs to be repositioned and redrawn also.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.RequiredFieldMarker.UpdateIndicators">
 <summary>
 Updates 'required' marked controls just in case there is a repainting of each marked control(s) and
 the indicator(s) attached to it needs to be repositioned and redrawn also.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.SideLabelledTextBox">
 <summary>
 Customized text field with side label and required field marking features.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.SideLabelledTextBox.SideLabelPositionEnum">
 <summary>
 Side label's side position.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelledTextBox.SideLabelPositionEnum.LeftSide">
 <summary>
 Left side of the text box.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelledTextBox.SideLabelPositionEnum.RightSide">
 <summary>
 Right side of the text box.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.SideLabelledTextBox.RequiredIndicatorPositionEnum">
 <summary>
 Required field indicator position in the text box.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelledTextBox.RequiredIndicatorPositionEnum.LeftTop">
 <summary>
 Upper left corner of the text box.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelledTextBox.RequiredIndicatorPositionEnum.RightTop">
 <summary>
 Upper right corner of the text box.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelledTextBox.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Controls.SideLabelledtextBox.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.FocusHighlightColor">
 <summary>
 Gets or sets control background color when cursor is focusing in the control and FocusHighlightEnabled is set to True.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.FocusHighlightEnabled">
 <summary>
 Gets or sets whether FocusHighlightColor would be the control background color when cursor is focusing in the control or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.NumericOnly">
 <summary>
 Gets or sets whether control will just accept numeric values or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.NumberFormat">
 <summary>
 Gets or sets the numbering format when NumericOnly is set to true.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.Required">
 <summary>
 Gets or sets whether the control is marked with a required indicator.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.RequiredIndicatorBackColor">
 <summary>
 Gets or sets required indicator background color attached to this control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.RequiredIndicatorPosition">
 <summary>
 Gets or sets required indicator position within the control's bounds.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.RightToLeft">
 <summary>
 Gets or sets value indicating whether control's elements are aligned to support the locales using right-to-left fonts.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.ScrollBars">
 <summary>
 Gets or sets which scrollbar will appear in a multiline textbox control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.SideLabelBackColor">
 <summary>
 Gets or sets side label's background color for this color.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.SideLabelFont">
 <summary>
 Gets or sets side label's font for this control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.SideLabelForeColor">
 <summary>
 Gets or sets side label's font forecolor for this control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.SideLabelPosition">
 <summary>
 Gets or sets side label's visibility position for this control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.SideLabelText">
 <summary>
 Gets or sets the text associated for the side label attached to this control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.SideLabelWidth">
 <summary>
 Gets or sets side label's display width attached to this control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.Text">
 <summary>
 Gets or sets the current text for the control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.TextAlign">
 <summary>
 Gets or sets how text is aligned in the control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.WatermarkEnabled">
 <summary>
 Gets or sets whether watermark text will associate the control when control text is empty.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.WatermarkFont">
 <summary>
 Gets or sets watermark text display font for the edit control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.WatermarkForeColor">
 <summary>
 Gets or sets watemark text color for the edit control.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelledTextBox.WatermarkText">
 <summary>
 Gets or sets watermark text associated with the edit control when the control is empty.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelledTextBox.UpdateRequiredIndicator">
 <summary>
 Updates required field indicator position if there is a need to relocate or there is a 
 need to repaint the host control of the required indicator.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.SideLabelProvider">
 <summary>
 Control extender to provide input controls with side label.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.SideLabelProvider.SideLabelStyle">
 <summary>
 Side label's custom styles.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabelStyle.FillColor">
 <summary>
 Background color.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabelStyle.Font">
 <summary>
 Font face.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabelStyle.ForeColor">
 <summary>
 Font color.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabelStyle.Width">
 <summary>
 Display width.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum">
 <summary>
 Side label's position within each of the associated controls.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum.LeftSide">
 <summary>
 Left side of the control.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum.RightSide">
 <summary>
 Right side of the control.
 </summary>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.Controls.SideLabelProvider.SideLabel">
 <summary>
 Side label features.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabel.Text">
 <summary>
 Associated text.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabel.ForeColor">
 <summary>
 Font color.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabel.BackColor">
 <summary>
 Background color.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabel.Font">
 <summary>
 Font face.
 </summary>
 <remarks></remarks>
</member>
<member name="F:TarsierEyes.Controls.SideLabelProvider.SideLabel.Width">
 <summary>
 Display width.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.#ctor">
 <summary>
 Creates a new instance of TarsierEyes.Controls.SidelabelProvider.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.Controls.SideLabelProvider.SideLabelPosition">
 <summary>
 Gets side label's position for each of the assigned controls.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.GetSideLabelBackColor(System.Windows.Forms.Control)">
 <summary>
 Gets assigned side label's fill background color.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.SetSideLabelBackColor(System.Windows.Forms.Control,System.Drawing.Color)">
 <summary>
 Sets assigned side label's fill background color.
 </summary>
 <param name="ctrl"></param>
 <param name="clr"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.GetSideLabelFont(System.Windows.Forms.Control)">
 <summary>
 Gets assigned side label display font.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.SetSideLabelFont(System.Windows.Forms.Control,System.Drawing.Font)">
 <summary>
 Sets assigned side label display font.
 </summary>
 <param name="ctrl"></param>
 <param name="fnt"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.GetSideLabelForeColor(System.Windows.Forms.Control)">
 <summary>
 Gets assigned side label's display text color.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.SetSideLabelForeColor(System.Windows.Forms.Control,System.Drawing.Color)">
 <summary>
 Sets assigned side label's display text color.
 </summary>
 <param name="ctrl"></param>
 <param name="clr"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.GetSideLabelText(System.Windows.Forms.Control)">
 <summary>
 Gets side label's text for the selected input control.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.SetSideLabelText(System.Windows.Forms.Control,System.String)">
 <summary>
 Sets side label's text for the selected input control.
 </summary>
 <param name="ctrl"></param>
 <param name="text"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.GetSideLabelWidth(System.Windows.Forms.Control)">
 <summary>
 Gets assigned side label's display width.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.SetSideLabelWidth(System.Windows.Forms.Control,System.Int32)">
 <summary>
 Sets assigned side label's display width.
 </summary>
 <param name="ctrl"></param>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.CanExtend(System.Object)">
 <summary>
 Validation if object was supported by side label.
 </summary>
 <param name="extendee">Control to evaluate.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.SetSideLabel(System.Windows.Forms.Control,TarsierEyes.Controls.SideLabelProvider.SideLabel)">
 <summary>
 Sets side label exclusively in runtime thru code.
 </summary>
 <param name="ctrl">Control to attach a side label.</param>
 <param name="label">The side label's structure.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.UpdateSideLabel(System.Windows.Forms.Control)">
 <summary>
 Updates control just in case there is a repainting of the host control and
 the side label attached to it needs to be repositioned and redrawn also.
 </summary>
 <param name="ctrl">Control attached with side label.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.UpdateSideLabels">
 <summary>
 Updates control(s) just in case there is a repainting of each hosted control(s) and
 the side label(s) attached to it needs to be repositioned and redrawn also.
 </summary>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.AttachSideLabel(System.Windows.Forms.Control,System.String)">
 <summary>
 Attaches a label with the specified caption at the specified side of the control
 </summary>
 <param name="ctrl">Control to attach a label with</param>
 <param name="caption">Label's text caption</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.AttachSideLabel(System.Windows.Forms.Control,System.String,TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum)">
 <summary>
 Attaches a label with the specified caption at the specified side of the control
 </summary>
 <param name="ctrl">Control to attach a label with</param>
 <param name="caption">Label's text caption</param>
 <param name="position">Label's position</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.AttachSideLabel(System.Windows.Forms.Control,System.String,TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum,System.Drawing.Color)">
 <summary>
 Attaches a label with the specified caption at the specified side of the control
 </summary>
 <param name="ctrl">Control to attach a label with</param>
 <param name="caption">Label's text caption</param>
 <param name="position">Label's position</param>
 <param name="backcolor">Label's background color</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.AttachSideLabel(System.Windows.Forms.Control,System.String,TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum,System.Drawing.Color,System.Drawing.Color)">
 <summary>
 Attaches a label with the specified caption at the specified side of the control
 </summary>
 <param name="ctrl">Control to attach a label with</param>
 <param name="caption">Label's text caption</param>
 <param name="position">Label's position</param>
 <param name="backcolor">Label's background color</param>
 <param name="forecolor">Label's forecolor</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.AttachSideLabel(System.Windows.Forms.Control,System.String,TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
 <summary>
 Attaches a label with the specified caption at the specified side of the control
 </summary>
 <param name="ctrl">Control to attach a label with</param>
 <param name="caption">Label's text caption</param>
 <param name="position">Label's position</param>
 <param name="backcolor">Label's background color</param>
 <param name="forecolor">Label's forecolor</param>
 <param name="font">Label's font face</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.Controls.SideLabelProvider.AttachSideLabel(System.Windows.Forms.Control,System.String,TarsierEyes.Controls.SideLabelProvider.LabelPositionEnum,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Int32)">
 <summary>
 Attaches a label with the specified caption at the specified side of the control
 </summary>
 <param name="ctrl">Control to attach a label with</param>
 <param name="caption">Label's text caption</param>
 <param name="position">Label's position</param>
 <param name="backcolor">Label's background color</param>
 <param name="forecolor">Label's forecolor</param>
 <param name="font">Label's font face</param>
 <param name="width">Label's width</param>
 <remarks></remarks>
</member>
<member name="T:TarsierEyes.LoadingForm">
 <summary>
 Loading form.
 </summary>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.LoadingForm.IsDialog">
 <summary>
 Gets or sets whether form is currently show in modal mode or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.LoadingForm.IsOpen">
 <summary>
 Gets whether loading form is currently displayed in the screen or not.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.LoadingForm.GetLoadImage(TarsierEyes.LoadScreen.LoadingImageEnum)">
 <summary>
 Gets the default loading images.
 </summary>
 <param name="image"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TarsierEyes.TarsierEyes.ClearTextImage">
 <summary>
 Gets or sets the globally used clear text button image in each of the search textboxes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.BeginRedraw(System.Object)">
 <summary>
 Calls the TarsierEyes.Common.Simple.Redraw(drawableobject, False) to start the updating of the drawable objects display area.
 </summary>
 <param name="value">Drawable object.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.EndRedraw(System.Object)">
 <summary>
 Calls the TarsierEyes.Common.Simple.Redraw(drawableobject) to display the drawable objects rectangular area.
 </summary>
 <param name="value">Drawable object.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.TryConvert``1(System.Object)">
 <summary>
 Works like TryCast function but this time supports assigned-value data types (ea. Integer, Decimal, Date and etc.).
 </summary>
 <typeparam name="T"></typeparam>
 <param name="expression">Expression / value to be converted.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.Char,System.Char,System.Char)">
 <summary>
 Returns whether the current character value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.DateTime,System.DateTime,System.DateTime)">
 <summary>
 Returns whether the current date value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.Decimal,System.Decimal,System.Decimal)">
 <summary>
 Returns whether the current numeric value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.Double,System.Double,System.Double)">
 <summary>
 Returns whether the current numeric value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.Single,System.Single,System.Single)">
 <summary>
 Returns whether the current numeric value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.Int64,System.Int64,System.Int64)">
 <summary>
 Returns whether the current numeric value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.Int32,System.Int32,System.Int32)">
 <summary>
 Returns whether the current numeric value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.SByte,System.SByte,System.SByte)">
 <summary>
 Returns whether the current numeric value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Between(System.Byte,System.Byte,System.Byte)">
 <summary>
 Returns whether the current numeric value is within the specified scope of ranges.
 </summary>
 <param name="value"></param>
 <param name="from"></param>
 <param name="to"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ClearFieldContents(System.Windows.Forms.ScrollableControl)">
 <summary>
 Clears and initializes each of the container's control(textboxes, comboboxes, grids, datetimepickers and etc.) datasources and input area values.
 </summary>
 <param name="container"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.CompressAdd(System.IO.DirectoryInfo,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file compression in the specified directory using the selected archiving tool. Files under the specified directory will just be copied into the result archive file retaining file(s) in the original directory. 
 </summary>
 <param name="directory"></param>
 <param name="archivingtool">Archiving tool.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.CompressInsert(System.IO.DirectoryInfo,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file compression in the specified directory using the selected archiving tool. Files under the specified directory will be inserted directly into the result archive file. 
 </summary>
 <param name="directory"></param>
 <param name="archivingtool">Archiving tool.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.CompressAdd(System.IO.FileInfo,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file compression in the specified file using the selected archiving tool. File  will just be copied into the archive file retaining then file in the original directory. 
 </summary>
 <param name="file"></param>
 <param name="archivingtool">Archiving tool.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.CompressInsert(System.IO.FileInfo,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file compression in the file using the selected archiving tool. File will be inserted directly into the result archive file. 
 </summary>
 <param name="file"></param>
 <param name="archivingtool">Archiving tool.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Decompress(System.IO.FileInfo,System.String,TarsierEyes.Archiver.ArchivingToolEnum)">
 <summary>
 Performs file extraction from the specified archive file into the specified destination folder using the selected archiving tool.
 </summary>
 <param name="file"></param>
 <param name="destination">Destination path for the extracted file(s).</param>
 <param name="archivingtool">Archiving tool.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Decrypt(System.String,System.String)">
 <summary>
 Decrypts the specified string using TripleDES and MD5 algorithm based on the specified decryption key.
 </summary>
 <param name="value"></param>
 <param name="key">Decryption key</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.EnableContainedFields(System.Windows.Forms.ScrollableControl)">
 <summary>
 Enables or disabled controls under the specified control container.
 </summary>
 <param name="container"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.EnableContainedFields(System.Windows.Forms.ScrollableControl,System.Boolean)">
 <summary>
 Enables or disabled controls under the specified control container.
 </summary>
 <param name="container"></param>
 <param name="enabled">Enabled or disabled</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.Encrypt(System.String,System.String)">
 <summary>
 Encrypts the specified string using TripleDES and MD5 algorithm based on the specified encryption key.
 </summary>
 <param name="value"></param>
 <param name="key">Encryption key</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.GetConnectionStringPart(System.String,TarsierEyes.MySQL.ConnectionDetailEnum)">
 <summary>
 Gets an assigned SQL connection string value from the specified section.
 </summary>
 <param name="value"></param>
 <param name="section">SQL connection string section.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Enum,System.Enum[])">
 <summary>
 Returns whether the current enumeration value is existing within the list of reference enumeration values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Char,System.Char[])">
 <summary>
 Returns whether the current character value is existing within the list of reference character values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.String,System.String[])">
 <summary>
 Returns whether the current string value is existing within the list of reference string values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.DateTime,System.DateTime[])">
 <summary>
 Returns whether the current date value is existing within the list of reference date values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Double,System.Double[])">
 <summary>
 Returns whether the current numeric value is existing within the list of reference numeric values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Single,System.Single[])">
 <summary>
 Returns whether the current numeric value is existing within the list of reference numeric values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Decimal,System.Decimal[])">
 <summary>
 Returns whether the current numeric value is existing within the list of reference numeric values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Byte,System.Byte[])">
 <summary>
 Returns whether the current numeric value is existing within the list of reference numeric values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.SByte,System.SByte[])">
 <summary>
 Returns whether the current numeric value is existing within the list of reference numeric values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Int64,System.Int64[])">
 <summary>
 Returns whether the current numeric value is existing within the list of reference numeric values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.In(System.Int32,System.Int32[])">
 <summary>
 Returns whether the current numeric value is existing within the list of reference numeric values or not.
 </summary>
 <param name="value"></param>
 <param name="references"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.IsEmail(System.String)">
 <summary>
 Returns whether the specified string is an email or not.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.IsIPAddress(System.String)">
 <summary>
 Returns whether the specified string is a IP address
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.LoadCountries(System.Windows.Forms.Control)">
 <summary>
 Loads list of countries into the specified control. 
 </summary>
 <param name="control"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.LoadData(System.Data.DataTable@,System.String,System.String)">
 <summary>
 Loads the current DataTable object with the resultset of the specified database query statement thru the specified database connection string.
 </summary>
 <param name="table"></param>
 <param name="connection">Database connection string.</param>
 <param name="commandtext">Database command statement.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.LoadData(System.Windows.Forms.Control,System.String,System.String)">
 <summary>
 Loads data into the specified bindable control.
 </summary>
 <param name="control"></param>
 <param name="connectionstring">Database connection string.</param>
 <param name="commandtext">Datasource commandtext</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.LoadData(System.Windows.Forms.Control,System.String,System.String,System.String)">
 <summary>
 Loads data into the specified bindable control.
 </summary>
 <param name="control"></param>
 <param name="connectionstring">Database connection string.</param>
 <param name="commandtext">Datasource commandtext</param>
 <param name="displaymember">Displaymember name for the binding.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.LoadData(System.Windows.Forms.Control,System.String,System.String,System.String,System.String)">
 <summary>
 Loads data into the specified bindable control.
 </summary>
 <param name="control"></param>
 <param name="connectionstring">Database connection string.</param>
 <param name="commandtext">Datasource commandtext</param>
 <param name="displaymember">Displaymember name for the binding.</param>
 <param name="valuemember">Valuemember name for the binding.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ManageOnDispose(System.Windows.Forms.Form)">
 <summary>
 Releases all relative resources (including processes) of the whole application after the current form is disposed. Resources (API calls and attached method) c / o : DMA.
 </summary>
 <param name="form"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.MarkAsEdited(System.Windows.Forms.Form)">
 <summary>
 Places a '*' character in the form's caption as an indicator that form's fields is modified.
 </summary>
 <param name="form"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.NumberOfDayInRange(System.Int32,System.DateTime,System.DateTime)">
 <summary>
 Returns the count of specified day between the given date range(s).
 </summary>
 <param name="day">Searchee day between Sunday-Saturday (1-7).</param>
 <param name="fromdate">Searching start date.</param>
 <param name="todate">Searching end date.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.NumberOfDayInRange(System.DayOfWeek,System.DateTime,System.DateTime)">
 <summary>
 Returns the count of specified day between the given date range(s).
 </summary>
 <param name="day">Searchee day between Sunday-Saturday (1-7).</param>
 <param name="fromdate">Searching start date.</param>
 <param name="todate">Searching end date.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ReadExcel(System.Data.DataTable,System.String)">
 <summary>
 Loads row data from the first Spreadsheet of the specified Microsoft Excel file into the current DataTable.
 </summary>
 <param name="table"></param>
 <param name="filename"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ReadExcel(System.Data.DataTable,System.String,System.String)">
 <summary>
 Loads row data from the specified Spreadsheet of the specified Microsoft Excel file into the current DataTable.
 </summary>
 <param name="table"></param>
 <param name="filename"></param>
 <param name="sheetname"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ResizeImage(System.Drawing.Image@,System.Int32,System.Int32)">
 <summary>
 Sets the display size of the specified image.
 </summary>
 <param name="img"></param>
 <param name="width"></param>
 <param name="height"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ResizeImage(System.Drawing.Image@,System.Drawing.Size)">
 <summary>
 Sets the display size of the specified image.
 </summary>
 <param name="img"></param>
 <param name="size"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.RLTrim(System.String)">
 <summary>
 Returns a complete space trimmed representation of the specified value (combination of RTrim and String.Trim() functions).
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.SetAsRequired(System.Windows.Forms.Control)">
 <summary>
 Sets the specified control with a required field indicator.
 </summary>
 <param name="control"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.SetAsRequired(System.Windows.Forms.Control,System.Boolean)">
 <summary>
 Sets the specified control with a required field indicator.
 </summary>
 <param name="control"></param>
 <param name="required">Mark as required or not.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.SimpleDecrypt(System.String,System.String)">
 <summary>
 Decrypts the specified value in a simple manner based on the decryption key's character length.
 </summary>
 <param name="value"></param>
 <param name="key">Decryption key.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.SimpleEncrypt(System.String,System.String)">
 <summary>
 Encrypts the specified value in a simple manner based on the encryption key's character length.
 </summary>
 <param name="value"></param>
 <param name="key">Encryption key.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToByteArray(System.IO.FileInfo)">
 <summary>
 Converts the specified file into its byte array representation.
 </summary>
 <param name="file"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToByteArray(System.Drawing.Image)">
 <summary>
 Converts the specified image into its byte array representation.
 </summary>
 <param name="picture"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToFileObject(System.Byte[],System.String)">
 <summary>
 Converts the specified byte array into a file object with the specified extension name.
 </summary>
 <param name="bytes"></param>
 <param name="extension">File extension</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToFileObject(System.Byte[],System.String,System.String)">
 <summary>
 Converts the specified byte array into a file object with the specified extension name.
 </summary>
 <param name="bytes"></param>
 <param name="extension">File extension</param>
 <param name="outputdirectory">Output directory for the exported file.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToHexadecimalString(System.Byte[])">
 <summary>
 Returns the hexadecimal string representation of the specified byte array.
 </summary>
 <param name="bytes"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToHexadecimalString(System.IO.FileInfo)">
 <summary>
 Returns the hexadecimal string representation of the specified file.
 </summary>
 <param name="file"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToHexadecimalString(System.Drawing.Image)">
 <summary>
 Returns the hexadecimal string representation of the specified image.
 </summary>
 <param name="picture"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToImage(System.Byte[])">
 <summary>
 Returns the image representation of the specified byte array.
 </summary>
 <param name="bytes"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToProper(System.String)">
 <summary>
 Returns the proper case (first letter capitalized and small caps for the preceeding letters) representation of the specified string.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Boolean)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Boolean,System.Boolean)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Byte)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Byte,System.Byte)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Char)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Char,System.Char)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.DateTime)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.DateTime,System.DateTime)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Decimal)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Decimal,System.Decimal)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Double)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Double,System.Double)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Int32)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Int32,System.Int32)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Int64)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.Int64,System.Int64)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.SByte)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.SByte,System.SByte)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.String)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSafeValue(System.String,System.String)">
 <summary>
 Parses the specified value to return its type-safe representation.
 </summary>
 <param name="value"></param>
 <param name="defaultvalue">Default value just in case it is not type-safe.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.DateTime)">
 <summary>
 Converts the specified date value in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.DateTime,System.Boolean)">
 <summary>
 Converts the specified date value in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <param name="withhrours">Determines whether to include time part of the current value in the result or not.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.Decimal)">
 <summary>
  Converts the specified numeric value in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.Decimal,System.Int32)">
 <summary>
 Converts the specified numeric value (with the specified decimal places) in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <param name="decimals">Number of decimal places.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.Double)">
 <summary>
 Converts the specified numeric value in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.Double,System.Int32)">
 <summary>
 Converts the specified numeric value (with the specified decimal places) in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <param name="decimals">Number of decimal places.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.Single)">
 <summary>
  Converts the specified numeric value in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.Single,System.Int32)">
 <summary>
 Converts the specified numeric value (with the specified decimal places) in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <param name="decimals">Number of decimal places.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.String)">
 <summary>
 Converts the specified string value in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToSqlValidString(System.String,System.Boolean)">
 <summary>
 Converts the specified string value in its SQL-qualified string representation.
 </summary>
 <param name="value"></param>
 <param name="fordatatableexpression">Determines whether this will be used for a DataTable expression or not.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.SByte)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.SByte,System.String)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Byte)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Byte,System.String)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Int32)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Int32,System.String)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Int64)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Int64,System.String)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Decimal)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Decimal,System.String)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Single)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Single,System.String)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Double)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.ToWords(System.Double,System.String)">
 <summary>
 Returns the english-word representation of the specified value.
 </summary>
 <param name="value"></param>
 <param name="currency">Suffixing currency.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.WaitToFinish(System.IAsyncResult)">
 <summary>
 Waits the specified sync result to be finished.
 </summary>
 <param name="async"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.WaitToFinish(System.IAsyncResult,System.Object)">
 <summary>
 Waits the specified sync result to be finished.
 </summary>
 <param name="async"></param>
 <param name="progressbar">Progressbar object to show the current status of the delegate.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.WaitToFinish(System.Threading.Thread)">
 <summary>
 Waits the specified sync result to be finished.
 </summary>
 <param name="async"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.WaitToFinish(System.Threading.Thread,System.Object)">
 <summary>
 Waits the specified sync result to be finished.
 </summary>
 <param name="async"></param>
 <param name="progressbar">Progressbar object to show the current status of the delegate.</param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.WriteExcel(System.Data.DataTable,System.String@)">
 <summary>
 Writes the contents of the specified DataTable into the specified file (file must be in .csv format otherwise method will automatically alter the file's extension into .csv).
 </summary>
 <param name="table"></param>
 <param name="filename"></param>
 <remarks></remarks>
</member>
<member name="M:TarsierEyes.TarsierEyes.WriteExcel(System.Data.DataTable,System.String@,System.String)">
 <summary>
  Writes the contents of the specified DataTable into the specified file (file must be in .csv format otherwise method will automatically alter the file's extension into .csv).
 </summary>
 <param name="table"></param>
 <param name="filename"></param>
 <param name="separator"></param>
 <remarks></remarks>
</member>
</members>
</doc>
